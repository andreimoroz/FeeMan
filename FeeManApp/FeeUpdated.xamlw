<Activity mc:Ignorable="sads" x:Class="CIB.DE.FeeMan.Workflows.FeeUpdated.Workflow"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:made="clr-namespace:Microsoft.Activities.Design.ExpressionTranslation;assembly=Microsoft.Activities.Design"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sn="clr-namespace:System.Net;assembly=System"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Sequence DisplayName="Root" sads:DebugSymbol.Symbol="9xAA/WsrTYa8qM0LT3K9mbouWkM6XFRGU1xTUF9HZXJtYW55XENJQi5ERS5GZWVNYW5cdHJ1bmtcc3JjXENJQi5ERS5GZWVNYW5cV29ya2Zsb3dzXEZlZVVwZGF0ZWRcV29ya2Zsb3cueGFtbJoCLgPMFg4CAQFcBcoWEAIBBl4JgxYUAgEanBYJyBYUAgENixYNlxYYAgEHXwt3FgMBlQl4C6sDFgMBjQisAwvnChADAYQF6AoLhxEQAwG/AogRC4IWEAIBG50WC6MWHwIBF6QWC8cWEAIBDowWD5UWGAIBCZYWD5YWRgIBCGANZjADAZwJZw12EgMBlgl8DZABIwMBkAmRAQ3eASQDAd8I3wEN6gEWAwHaCOsBDfEBIQMB0wjyAQ2lAhIDAcEIpgINgwMYAwGfCIQDDaMDGAMBkgikAw2qAyEDAY4IswMP4wQUAwHDB+YED+UKFAMBhwXvCg+FERoDAcICjxEPgBYaAgEeqxYPxRYjAgERbhF0JQMBmQn5ARH8ARwDAc4I/wERowIcAwHECKsCD8ACJQMBugjBAg/MAiYDAbUIzQIPggMUAwGgCIgDD5MDIQMBmgiUAw+iAyYDAZMIugMT6gMeAwH3B+0DE+EEGAMBxgftBBOwBR4DAacHswUT4woYAwGKBfQKEf8KGgMB/wSACxHECxYDAeQExQsR2gspAwHdBNsLEeELJQMB2QTiCxGEDBwDAcgEhQwRkQ8WAwGvA5IPEfQQHAMByAL1EBGEESUDAcUCoBER3hEcAwGoAt8REZISHAMB8QGTEhGaFBYCAX+bFBH/FRYCASK8FhXCFjMCART6ARP6AYwBAwHRCPsBE/sBggEDAc8IgAITmAInAwHJCJkCE6ICHAMBxQjUAhOAAx4DAaQIuwMVuwOeAQMBiwi8AxXHAx4DAYYIyAMV0QMeAwGCCNIDFekDIAMB+Af0AxfcBCIDAcsH3wQX3wStAQMByQfuBBXuBJwBAwHBB+8EFZEFIAMBsQeSBRWvBSkDAagHugUXgAYiAwGJB4MGF+EKHAMBjgWHCxXCCyADAecE4wsT9wsYAwHRBPgLE4MMHAMByQSMDBWPDyADAbIDpA8Trw8cAwGoA7APE8QPGAMBoAPFDxPZDxgDAZgD2g8TmxApAwHvApwQE6cQHAMB6gKoEBO3EBgDAeMCuBAT1xAgAwHWAtgQE+MQKgMB0QLkEBPzEBgDAcsCpBETtBEpAwG5ArURE8ARKgMBtALBERPRESkDAa4C0hET3REqAwGpAuARE+wRHAMBjwLtEROREhgDAfIBmhIVmBQgAwGCAaIUFf0VIAIBJZECGZUCNwMBzAjVAhXkAhoDAawI5QIV/wIpAwGlCNMDF94DIAMB/QffAxfoAyADAfkH9QMZ9QOeAQMB9Qf2AxmYBCQDAeUHmQQZogQiAwHhB6MEGcMELQMB1gfEBBnbBCQDAcwH8AQXhAUcAwG5B4UFF5AFIAMBsgejBRusBTkDAasHuwUZuwWiAQMBpQe8BRneBSQDAZUH3wUZ/wUtAwGKB4oGG7EIIAMBjwa0CBvfCiADAZMFiAsXkwsgAwH6BJQLF8ELHAMB6ATqCxf1CyADAdQEkQwXpg0iAwGRBKcNF6cOIgMB3gOoDheODyIDAbMDtw8Xwg8gAwGjA8wPF9cPIAMBmwOvEBe1ECsDAeYCwBAZxRA3AwHgAusQF/EQKwMBzgL0EReAEiADAYICgxIXjxIgAwH1AaMSF+8TIgMBowHwExf9EyADAY4B/hMXlxQcAwGEAasUF9QVIgIBPtUVF+IVIAIBMeMVF/wVHAIBJ9wCGeICLQMBrwj2Ahv8AjkDAagI9wMbiwQgAwHtB4wEG5cEJAMB5ge0BB/ABD0DAdkHxQQb0AQkAwHRB9EEG9oEJAMBzQf3BBuCBSQDAbwHvQUb0QUgAwGdB9IFG90FJAMBlgfwBR/8BT0DAY0HkQYflQcqAwHQBpgHH68IJAMBkga7CB+XCiQDAbUFmgof3QoqAwGZBZsLG78LJgMB6wSZDBmkDCIDAcMEpQwZtAweAwG9BLUMGc8MJgMBsgTQDBnfDB4DAawE4AwZ6wwwAwGnBOwMGZUNIwMBmASWDRmlDR4DAZIErg0Zvg0vAwGIBL8NGcoNIgMBgwTLDRnaDR4DAf0D2w0Z+g0mAwHwA/sNGYoOHgMB6gOLDhmWDjADAeUDlw4Zpg4eAwHfA68OGboOIgMB2AO7DhnLDi8DAc8DzA4Z2w4eAwHJA9wOGf0OJgMBugP+DhmNDx4DAbQDsRIZvBIiAwHsAb0SGcMSLQMB6QHEEhneEiYDAd4B3xIZ5RItAwHbAeYSGfESMAMB1gHyEhmSEyMDAcoBkxMZnBMwAwHFAZ0TGaMTLQMBwgGkExmqEy0DAb8BqxMZ7hMjAwGlAYUUG5UUJgMBhwG4FBnDFCICAXnEFBnTFB4CAXPUFBnuFCYCAWjvFBn1FC0CAWX2FBmBFTACAWCCFRmIFS0CAV2JFRmPFS0CAVqQFRnTFSMCAUDqFRv6FSYCASr+Ax+JBCgDAfAHxAUfzwUoAwGgB5IGIZIGqAEDAYcHkwYhtQYsAwH3BrYGIb8GKgMB8wbABiHmBjUDAeQG5wYhlAcsAwHRBp8HI4cILgMBpAaKCCOtCC4DAZUGwggjuQkuAwHcBbwJI5UKKAMBuAWbCiGbCqQBAwGzBZwKIb4KLAMBowW/CiHcCjUDAZoFnAsdpwsmAwH1BKgLHb4LIgMB7ASsDB2yDDEDAcAEuAwfvQw9AwG6BNcMHd0MMQMBrwT2DB2TDSgDAZkEnQ0dow0xAwGVBNINHdgNMQMBgATjDR/oDT0DAfoDgg4diA4xAwHtA54OHaQOMQMB4gPTDh3ZDjEDAcwD5A4f6w49AwHEA4UPHYsPMQMBtwPHEh/MEj0DAeYB/BIdkBMoAwHLAbUTHewTKAMBpgHLFB3RFDECAXbXFB/cFD0CAXCaFR3RFSgCAUGUBiOoBigDAf8GqQYjtAYsAwH4BtEGJ+MGRQMB5wboBiPzBiwDAd8G9AYj/QYsAwHbBv4GI4kHLAMB1gaKByOTBywDAdIGoAcloAeqAQMBzgahByXDBzADAb4GxAclzQcuAwG6Bs4HJe4HOQMBrwbvByWGCDADAaUGiwgllAguAwGgBpUIJawIMAMBlgbDCCXDCK4BAwGNBsQIJc0ILgMBiQbOCCXwCDADAfkF8QgllAk5AwHsBZUJJbgJMAMB3QXDCSeHCjIDAb8FigonkwowAwG7BZ0KI7EKKAMBqwWyCiO9CiwDAaQF0Aon2QpFAwGdBa8LIbwLLAMB7wT3DB+CDTYDAaAEgw0fkg0kAwGaBP0SH4gTNgMBzwGJEx+PEzMDAcwBuhMfxRMxAwG4AcYTH9ETNgMBswHSEx/hEyQDAawB4hMf6xMxAwGnAZ8VH6oVMQIBU6sVH7YVNgIBTrcVH8YVJAIBR8cVH9AVMQIBQpsGJ6YGMAMBggeiBye2BywDAcYGtwcnwgcwAwG/Bt8HK+sHSQMBsgbwByf7BzADAaoG/AcnhQgwAwGmBpYIJ6EIMAMBmwaiCCerCDADAZcGzwgn4wgsAwGBBuQIJ+8IMAMB+gWCCSuRCUkDAe8FlgknoQkwAwHnBaIJJ6sJMAMB4wWsCSe3CTADAd4FxAkpxAmtAQMB2gXFCSnnCTQDAcoF6Akphgo9AwHABaQKJ68KMAMBrgWwCyO7CywDAfAEig0jkA03AwGdBNkTI98TNwMBrwG+FSPEFTcCAUqpByu0BzQDAckG1ggr4Qg0AwGEBsYJK9oJMAMB0gXbCSvmCTQDAcsF+QkvgwpNAwHDBc0JL9gJOAMB1QU=">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID13" Name="wfRequest" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID15" Name="wfValidate" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID14" Name="wfApprove" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID12" Name="wfStatus" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID20" Name="wfWorkflowActive" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID33" Name="wfArchiveStatus">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID30" Name="wfUserTitle" />
      <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID23" Name="wfCreated" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID3" Name="wfTeamId" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID4" Name="wfCustomerAccount" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID5" Name="wfClientName" />
      <Variable x:TypeArguments="x:Double" x:Name="__ReferenceID6" Name="wfTransactionAmount" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID7" Name="wfCurrencyId" />
      <Variable x:TypeArguments="x:Double" x:Name="__ReferenceID8" Name="wfUnits" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID9" Name="wfComments" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID10" Name="wfPLVDescriptionId" />
      <Variable x:TypeArguments="x:Double" x:Name="__ReferenceID11" Name="wfAmount" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID16" Name="wfRequestedById" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID19" Name="wfStatusHistory">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID21" Name="wfModifiedById" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID17" Name="wfApprovedById" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID32" Default="0" Name="wfValidatedById" />
      <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID2" Name="wfFeeProperties" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID34" Name="wfEMailSubject" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID36" Name="wfFEMailMsg1" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID37" Name="wfFEMailMsg2" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID24" Name="wfId" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID0" Name="wfSiteUrl" />
      <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID22" Name="wfModified" />
      <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID18" Name="wfApprovedAt" />
      <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID25" Name="wfExportedAt" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID26" Name="wfModifiedTime" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID35" Name="wfTEMailMsg" />
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID62" Name="wfIdArchive" />
      <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID1" Default="True" Name="wfTraceDebug" />
    </Sequence.Variables>
    <TryCatch>
      <TryCatch.Try>
        <Sequence DisplayName="Seq Try">
          <Sequence DisplayName="Seq Lookup Context">
            <p1:LookupWorkflowContextProperty PropertyName="CurrentWebUrl">
              <p1:LookupWorkflowContextProperty.Result>
                <OutArgument x:TypeArguments="x:String">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfSiteUrl">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                  </p:ExpressionContainerReference>
                </OutArgument>
              </p1:LookupWorkflowContextProperty.Result>
            </p1:LookupWorkflowContextProperty>
            <If DisplayName="If TraceToHistory">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                        <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                  </p:ExpressionContainerValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <p1:WriteToHistory>
                  <p1:WriteToHistory.Message>
                    <InArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;SiteURL=&quot; + wfSiteUrl">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:ConcatString>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="SiteURL=" />
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                          </InArgument>
                        </p:ConcatString>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:WriteToHistory.Message>
                </p1:WriteToHistory>
              </If.Then>
            </If>
          </Sequence>
          <Sequence DisplayName="Seq Read Item">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" x:Name="__ReferenceID31" Name="wfUserLoginName" />
            </Sequence.Variables>
            <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Fee ListItem">
              <p1:LookupSPListItem.ItemId>
                <InArgument x:TypeArguments="x:Int32">
                  <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                    <p1:GetCurrentItemId />
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:LookupSPListItem.ItemId>
              <p1:LookupSPListItem.ListId>
                <InArgument x:TypeArguments="s:Guid">
                  <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                    <p1:GetCurrentListId />
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:LookupSPListItem.ListId>
              <p1:LookupSPListItem.Result>
                <OutArgument x:TypeArguments="p:DynamicValue">
                  <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfFeeProperties">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfFeeProperties">
                        <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID2}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfFeeProperties" />
                  </p:ExpressionContainerReference>
                </OutArgument>
              </p1:LookupSPListItem.Result>
            </p1:LookupSPListItem>
            <p:GetODataProperties DisplayName="Get Fee Properties">
              <p:GetODataProperties.Source>
                <InArgument x:TypeArguments="p:DynamicValue">
                  <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfFeeProperties">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfFeeProperties">
                        <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID2}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfFeeProperties" />
                  </p:ExpressionContainerValue>
                </InArgument>
              </p:GetODataProperties.Source>
              <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                <OutArgument x:TypeArguments="x:Int32" x:Key="fmTeamId">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfTeamId">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfTeamId">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfTeamId" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmAccount">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfCustomerAccount">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfCustomerAccount">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID4}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfCustomerAccount" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmClientName">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfClientName">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfClientName">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID5}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfClientName" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Double" x:Key="fmTransactionAmount">
                  <p:ExpressionContainerReference x:TypeArguments="x:Double" DisplayName="wfTransactionAmount">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Double" x:Key="wfTransactionAmount">
                        <VariableReference x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID6}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Double" ArgumentName="wfTransactionAmount" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="fmCurrencyId">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfCurrencyId">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfCurrencyId">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfCurrencyId" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Double" x:Key="fmUnits">
                  <p:ExpressionContainerReference x:TypeArguments="x:Double" DisplayName="wfUnits">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                        <VariableReference x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmComments">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfComments">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfComments">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfComments" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="fmFeePLVDescriptionId">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfPLVDescriptionId">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfPLVDescriptionId">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID10}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfPLVDescriptionId" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Double" x:Key="fmAmount">
                  <p:ExpressionContainerReference x:TypeArguments="x:Double" DisplayName="wfAmount">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Double" x:Key="wfAmount">
                        <VariableReference x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID11}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Double" ArgumentName="wfAmount" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmStatus">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatus">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfStatus">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatus" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmRequest">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfRequest">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfRequest">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID13}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfRequest" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmApprove">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfApprove">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfApprove">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfApprove" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmValidate">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfValidate">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfValidate">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID15}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfValidate" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="fmRequestedById">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfRequestedById">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfRequestedById">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID16}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfRequestedById" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="fmApprovedById">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfApprovedById">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfApprovedById">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID17}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfApprovedById" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="fmApprovedAt">
                  <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="wfApprovedAt">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="s:DateTime" x:Key="wfApprovedAt">
                        <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID18}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="wfApprovedAt" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="fmWorkflowActive">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfWorkflowActive">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="EditorId">
                  <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                        <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="Modified">
                  <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="wfModified">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="s:DateTime" x:Key="wfModified">
                        <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID22}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="wfModified" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="Created">
                  <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="wfCreated">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="s:DateTime" x:Key="wfCreated">
                        <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID23}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="wfCreated" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="Id">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfId">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfId">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfId" />
                  </p:ExpressionContainerReference>
                </OutArgument>
                <OutArgument x:TypeArguments="s:DateTime" x:Key="fmExportedAt">
                  <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="wfExportedAt">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="s:DateTime" x:Key="wfExportedAt">
                        <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID25}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="wfExportedAt" />
                  </p:ExpressionContainerReference>
                </OutArgument>
              </scg:Dictionary>
            </p:GetODataProperties>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfModifiedTime">
                    <p:ExpressionContainerReference.Arguments>
                      <InOutArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                      </InOutArgument>
                    </p:ExpressionContainerReference.Arguments>
                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                  </p:ExpressionContainerReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfModified.ToString(&quot;dd.MM.yyyy hh:mm&quot;)">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="x:Object" x:Key="wfModified">
                        <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID22}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <p:ToString Format="dd.MM.yyyy hh:mm">
                      <InArgument x:TypeArguments="x:Object">
                        <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfModified" />
                      </InArgument>
                    </p:ToString>
                  </p:ExpressionContainerValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <p1:WriteToHistory>
              <p1:WriteToHistory.Message>
                <InArgument x:TypeArguments="x:String">
                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Current item Request=&quot; + wfRequest + &quot; Approve=&quot; + wfApprove + &quot; Validate=&quot; + wfValidate + &quot; Status=&quot; + wfStatus + &quot; WorkflowActive=&quot; + wfWorkflowActive">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="wfRequest">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID13}" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="wfApprove">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="wfValidate">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID15}" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <p:ConcatString>
                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                        <p:ConcatString>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                            <p:ConcatString>
                              <p:ConcatString.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </p:ConcatString.Result>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                <p:ConcatString>
                                  <p:ConcatString.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </p:ConcatString.Result>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <p:ConcatString>
                                      <p:ConcatString.Result>
                                        <OutArgument x:TypeArguments="x:String" />
                                      </p:ConcatString.Result>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                        <p:ConcatString>
                                          <p:ConcatString.Result>
                                            <OutArgument x:TypeArguments="x:String" />
                                          </p:ConcatString.Result>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                            <p:ConcatString>
                                              <p:ConcatString.Result>
                                                <OutArgument x:TypeArguments="x:String" />
                                              </p:ConcatString.Result>
                                              <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                <p:ConcatString>
                                                  <p:ConcatString.Result>
                                                    <OutArgument x:TypeArguments="x:String" />
                                                  </p:ConcatString.Result>
                                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                    <p:ConcatString>
                                                      <p:ConcatString.Result>
                                                        <OutArgument x:TypeArguments="x:String" />
                                                      </p:ConcatString.Result>
                                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Current item Request=" />
                                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfRequest" />
                                                      </InArgument>
                                                    </p:ConcatString>
                                                  </InArgument>
                                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Approve=" />
                                                </p:ConcatString>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprove" />
                                              </InArgument>
                                            </p:ConcatString>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Validate=" />
                                        </p:ConcatString>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfValidate" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Status=" />
                                </p:ConcatString>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                              </InArgument>
                            </p:ConcatString>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" WorkflowActive=" />
                        </p:ConcatString>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                      </InArgument>
                    </p:ConcatString>
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:WriteToHistory.Message>
            </p1:WriteToHistory>
            <If DisplayName="If WorkflowActive">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfWorkflowActive == &quot;Active&quot;">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <p:IsEqualString Pattern="{x:Null}" Text="Active">
                      <p:IsEqualString.Input>
                        <InArgument x:TypeArguments="x:String">
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                        </InArgument>
                      </p:IsEqualString.Input>
                    </p:IsEqualString>
                  </p:ExpressionContainerValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="Seq TerminateWorkflow">
                  <p1:WriteToHistory Message="Another workflow is active. Terminate!" />
                  <TerminateWorkflow Reason="Another Workflow is active" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Seq Set WorkflowActive">
                  <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Set Workflow Active">
                    <p1:UpdateListItem.ItemId>
                      <InArgument x:TypeArguments="x:Int32">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                          <p1:GetCurrentItemId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:UpdateListItem.ItemId>
                    <p1:UpdateListItem.ListId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                          <p1:GetCurrentListId />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:UpdateListItem.ListId>
                    <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:SetDynamicValueProperties>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="fmWorkflowActive">Active</InArgument>
                          </scg:Dictionary>
                        </p:SetDynamicValueProperties>
                      </InArgument>
                    </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                  </p1:UpdateListItem>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfWorkflowActive">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">-</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <Sequence DisplayName="Seq Update Amount">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Double" x:Name="__ReferenceID28" Name="wfStandardPrice" />
                <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID27" Name="wfPriceList" />
              </Sequence.Variables>
              <p1:LookupSPListItem ItemGuid="{x:Null}">
                <p1:LookupSPListItem.ItemId>
                  <InArgument x:TypeArguments="x:Int32">
                    <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfPLVDescriptionId">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="wfPLVDescriptionId">
                          <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID10}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfPLVDescriptionId" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:LookupSPListItem.ItemId>
                <p1:LookupSPListItem.ListId>
                  <InArgument x:TypeArguments="s:Guid">
                    <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/PriceList;}&quot;)">
                      <p:ParseGuid Value="{}{$ListId:Lists/PriceList;}" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:LookupSPListItem.ListId>
                <p1:LookupSPListItem.Properties>
                  <InArgument x:TypeArguments="sco:Collection(x:String)">
                    <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:String)" DisplayName="new System.Collections.ObjectModel.Collection&lt;string&gt; { &quot;fmStandardPrice&quot; }">
                      <p:BuildCollection x:TypeArguments="x:String">
                        <p:BuildCollection.Values>
                          <InArgument x:TypeArguments="x:String">fmStandardPrice</InArgument>
                        </p:BuildCollection.Values>
                      </p:BuildCollection>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:LookupSPListItem.Properties>
                <p1:LookupSPListItem.Result>
                  <OutArgument x:TypeArguments="p:DynamicValue">
                    <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfPriceList">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfPriceList">
                          <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID27}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfPriceList" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </p1:LookupSPListItem.Result>
              </p1:LookupSPListItem>
              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                <p:GetODataProperties.Source>
                  <InArgument x:TypeArguments="p:DynamicValue">
                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfPriceList">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfPriceList">
                          <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID27}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfPriceList" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p:GetODataProperties.Source>
                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                  <OutArgument x:TypeArguments="x:Double" x:Key="fmStandardPrice">
                    <p:ExpressionContainerReference x:TypeArguments="x:Double" DisplayName="wfStandardPrice">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="x:Double" x:Key="wfStandardPrice">
                          <VariableReference x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID28}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="x:Double" ArgumentName="wfStandardPrice" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </scg:Dictionary>
              </p:GetODataProperties>
              <If DisplayName="If Amount">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="(wfStandardPrice != 0) &amp;&amp; (wfUnits != 0)">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:Double" x:Key="wfStandardPrice">
                          <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID28}" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                          <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:And>
                        <p:And.Left>
                          <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                            <p:Not>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:IsEqual x:TypeArguments="x:Double">
                                  <p:IsEqual.Left>
                                    <InArgument x:TypeArguments="x:Double" EvaluationOrder="0">
                                      <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfStandardPrice" />
                                    </InArgument>
                                  </p:IsEqual.Left>
                                  <p:IsEqual.Result>
                                    <OutArgument x:TypeArguments="x:Boolean" />
                                  </p:IsEqual.Result>
                                  <p:IsEqual.Right>
                                    <InArgument x:TypeArguments="x:Double" EvaluationOrder="1" Expression="0" />
                                  </p:IsEqual.Right>
                                </p:IsEqual>
                              </InArgument>
                            </p:Not>
                          </InArgument>
                        </p:And.Left>
                        <p:And.Right>
                          <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                            <p:Not>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:IsEqual x:TypeArguments="x:Double">
                                  <p:IsEqual.Left>
                                    <InArgument x:TypeArguments="x:Double" EvaluationOrder="0">
                                      <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                                    </InArgument>
                                  </p:IsEqual.Left>
                                  <p:IsEqual.Result>
                                    <OutArgument x:TypeArguments="x:Boolean" />
                                  </p:IsEqual.Result>
                                  <p:IsEqual.Right>
                                    <InArgument x:TypeArguments="x:Double" EvaluationOrder="1" Expression="0" />
                                  </p:IsEqual.Right>
                                </p:IsEqual>
                              </InArgument>
                            </p:Not>
                          </InArgument>
                        </p:And.Right>
                      </p:And>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Seq Update Amount">
                    <If DisplayName="If TraceToHistory">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Updating Amount: Units=&quot; + wfUnits + &quot; Price=&quot; + wfStandardPrice + &quot; Amount=&quot; + (wfStandardPrice*wfUnits)">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                                    <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Double" x:Key="wfStandardPrice">
                                    <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID28}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Double" x:Key="wfStandardPrice1">
                                    <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID28}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Double" x:Key="wfUnits1">
                                    <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                        <p:ConcatString>
                                          <p:ConcatString.Result>
                                            <OutArgument x:TypeArguments="x:String" />
                                          </p:ConcatString.Result>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                            <p:ConcatString>
                                              <p:ConcatString.Result>
                                                <OutArgument x:TypeArguments="x:String" />
                                              </p:ConcatString.Result>
                                              <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                <p:ConcatString>
                                                  <p:ConcatString.Result>
                                                    <OutArgument x:TypeArguments="x:String" />
                                                  </p:ConcatString.Result>
                                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Updating Amount: Units=" />
                                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                    <p:Convert x:TypeArguments="x:Double, x:String">
                                                      <p:Convert.Result>
                                                        <OutArgument x:TypeArguments="x:String" />
                                                      </p:Convert.Result>
                                                      <InArgument x:TypeArguments="x:Double">
                                                        <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                                                      </InArgument>
                                                    </p:Convert>
                                                  </InArgument>
                                                </p:ConcatString>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Price=" />
                                            </p:ConcatString>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                            <p:Convert x:TypeArguments="x:Double, x:String">
                                              <p:Convert.Result>
                                                <OutArgument x:TypeArguments="x:String" />
                                              </p:Convert.Result>
                                              <InArgument x:TypeArguments="x:Double">
                                                <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfStandardPrice" />
                                              </InArgument>
                                            </p:Convert>
                                          </InArgument>
                                        </p:ConcatString>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Amount=" />
                                    </p:ConcatString>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <p:Convert x:TypeArguments="x:Double, x:String">
                                      <InArgument x:TypeArguments="x:Double">
                                        <p:Multiply x:TypeArguments="x:Double">
                                          <p:Multiply.Left>
                                            <InArgument x:TypeArguments="x:Double" EvaluationOrder="0">
                                              <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfStandardPrice1" />
                                            </InArgument>
                                          </p:Multiply.Left>
                                          <p:Multiply.Result>
                                            <OutArgument x:TypeArguments="x:Double" />
                                          </p:Multiply.Result>
                                          <p:Multiply.Right>
                                            <InArgument x:TypeArguments="x:Double" EvaluationOrder="1">
                                              <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits1" />
                                            </InArgument>
                                          </p:Multiply.Right>
                                        </p:Multiply>
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                      </If.Then>
                    </If>
                    <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Amount">
                      <p1:UpdateListItem.ItemId>
                        <InArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                            <p1:GetCurrentItemId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:UpdateListItem.ItemId>
                      <p1:UpdateListItem.ListId>
                        <InArgument x:TypeArguments="s:Guid">
                          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                            <p1:GetCurrentListId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:UpdateListItem.ListId>
                      <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <p:SetDynamicValueProperties>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                              <InArgument x:TypeArguments="x:Double" x:Key="fmAmount">
                                <p:ExpressionContainerValue x:TypeArguments="x:Double" DisplayName="wfStandardPrice*wfUnits">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:Double" x:Key="wfStandardPrice">
                                      <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID28}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                                      <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:Multiply x:TypeArguments="x:Double">
                                    <p:Multiply.Left>
                                      <InArgument x:TypeArguments="x:Double" EvaluationOrder="0">
                                        <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfStandardPrice" />
                                      </InArgument>
                                    </p:Multiply.Left>
                                    <p:Multiply.Right>
                                      <InArgument x:TypeArguments="x:Double" EvaluationOrder="1">
                                        <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                                      </InArgument>
                                    </p:Multiply.Right>
                                  </p:Multiply>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </scg:Dictionary>
                          </p:SetDynamicValueProperties>
                        </InArgument>
                      </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                    </p1:UpdateListItem>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence DisplayName="Seq Lookup ModifiedBy User">
              <Sequence.Variables>
                <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID29" Name="wfUser" />
              </Sequence.Variables>
              <p1:LookupSPUser>
                <p1:LookupSPUser.PrincipalId>
                  <InArgument x:TypeArguments="x:Int32">
                    <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                          <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:LookupSPUser.PrincipalId>
                <p1:LookupSPUser.Result>
                  <OutArgument x:TypeArguments="p:DynamicValue">
                    <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                          <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID29}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </p1:LookupSPUser.Result>
              </p1:LookupSPUser>
              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                <p:GetODataProperties.Source>
                  <InArgument x:TypeArguments="p:DynamicValue">
                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                          <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID29}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p:GetODataProperties.Source>
                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                  <OutArgument x:TypeArguments="x:String" x:Key="Title">
                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfUserTitle">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfUserLoginName">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID31}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </scg:Dictionary>
              </p:GetODataProperties>
            </Sequence>
            <p1:WriteToHistory>
              <p1:WriteToHistory.Message>
                <InArgument x:TypeArguments="x:String">
                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Current User=&quot; + wfUserTitle + &quot; (&quot; + wfUserLoginName + &quot;) &quot;">
                    <p:ExpressionContainerValue.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID31}" />
                      </InArgument>
                    </p:ExpressionContainerValue.Arguments>
                    <p:ConcatString>
                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                        <p:ConcatString>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                            <p:ConcatString>
                              <p:ConcatString.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </p:ConcatString.Result>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                <p:ConcatString>
                                  <p:ConcatString.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </p:ConcatString.Result>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Current User=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                  </InArgument>
                                </p:ConcatString>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" (" />
                            </p:ConcatString>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                          </InArgument>
                        </p:ConcatString>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=") " />
                    </p:ConcatString>
                  </p:ExpressionContainerValue>
                </InArgument>
              </p1:WriteToHistory.Message>
            </p1:WriteToHistory>
          </Sequence>
          <If DisplayName="If Validating">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfStatus == &quot;Exported&quot;">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:IsEqualString Pattern="{x:Null}" Text="Exported">
                    <p:IsEqualString.Input>
                      <InArgument x:TypeArguments="x:String">
                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                      </InArgument>
                    </p:IsEqualString.Input>
                  </p:IsEqualString>
                </p:ExpressionContainerValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <If DisplayName="If Validate Validated">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfValidate == &quot;Validate&quot;">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="wfValidate">
                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID15}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:IsEqualString Pattern="{x:Null}" Text="Validate">
                        <p:IsEqualString.Input>
                          <InArgument x:TypeArguments="x:String">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfValidate" />
                          </InArgument>
                        </p:IsEqualString.Input>
                      </p:IsEqualString>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Seq Validated">
                    <p1:WriteToHistory DisplayName="WriteToHistory Validated" Message="Item Validated" />
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfValidatedById">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="wfValidatedById">
                                <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID32}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfValidatedById" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                                <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">
                          <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfArchiveStatus">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                                <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Validated</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence DisplayName="Seq EMail">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; has been validated.&quot;">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" has been validated." />
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTEMailMsg">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">The request has been validated by Feeman Team, and it was archived.</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If DisplayName="If Validate InputInvalid">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfValidate == &quot;Invalid&quot;">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfValidate">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID15}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:IsEqualString Pattern="{x:Null}" Text="Invalid">
                            <p:IsEqualString.Input>
                              <InArgument x:TypeArguments="x:String">
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfValidate" />
                              </InArgument>
                            </p:IsEqualString.Input>
                          </p:IsEqualString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Seq Invalid">
                        <p1:WriteToHistory DisplayName="WriteToHistory Invalid" Message="Item Invalid" />
                        <Sequence DisplayName="Seq Format StatusHistory">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:Not>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <p:IsEmptyString CheckForWhiteSpace="True">
                                        <InArgument x:TypeArguments="x:String">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </InArgument>
                                      </p:IsEmptyString>
                                    </InArgument>
                                  </p:Not>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                      </p:ConcatString>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                  <p:ExpressionContainerReference.Arguments>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InOutArgument>
                                  </p:ExpressionContainerReference.Arguments>
                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </p:ExpressionContainerReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Invalid set by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <p:ConcatString>
                                            <p:ConcatString.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </p:ConcatString.Result>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <p:ConcatString.Result>
                                                  <OutArgument x:TypeArguments="x:String" />
                                                </p:ConcatString.Result>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Invalid set by " />
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                    </InArgument>
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatus">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatus" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Invalid</InArgument>
                          </Assign.Value>
                        </Assign>
                        <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status">
                          <p1:UpdateListItem.ItemId>
                            <InArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                <p1:GetCurrentItemId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:UpdateListItem.ItemId>
                          <p1:UpdateListItem.ListId>
                            <InArgument x:TypeArguments="s:Guid">
                              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                <p1:GetCurrentListId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:UpdateListItem.ListId>
                          <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="fmStatus">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatus">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                        </p1:UpdateListItem>
                        <Sequence DisplayName="Seq EMail">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                                  <p:ExpressionContainerReference.Arguments>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                    </InOutArgument>
                                  </p:ExpressionContainerReference.Arguments>
                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                </p:ExpressionContainerReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; has invalid input.&quot;">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" has invalid input." />
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTEMailMsg">
                                  <p:ExpressionContainerReference.Arguments>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                    </InOutArgument>
                                  </p:ExpressionContainerReference.Arguments>
                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                                </p:ExpressionContainerReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">The request was reviewed by Feeman Team, but it has some &lt;span style='color:red'&gt;INVALID&lt;/span&gt; data. Please correct and send request again.</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <p1:WriteToHistory DisplayName="WriteToHistory validate empty" Message="Item Validate is empty" />
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </If.Then>
            <If.Else>
              <If DisplayName="If Exported">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfStatus == &quot;Exported&quot;">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:IsEqualString Pattern="{x:Null}" Text="Exported">
                        <p:IsEqualString.Input>
                          <InArgument x:TypeArguments="x:String">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                          </InArgument>
                        </p:IsEqualString.Input>
                      </p:IsEqualString>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence DisplayName="Seq Exported">
                    <p1:WriteToHistory DisplayName="WriteToHistory Exported" Message="Item Exported" />
                    <Sequence DisplayName="Seq Format StatusHistory">
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:Not>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <p:IsEmptyString CheckForWhiteSpace="True">
                                    <InArgument x:TypeArguments="x:String">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </InArgument>
                                  </p:IsEmptyString>
                                </InArgument>
                              </p:Not>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                  <p:ExpressionContainerReference.Arguments>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InOutArgument>
                                  </p:ExpressionContainerReference.Arguments>
                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </p:ExpressionContainerReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                      </If>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Exported by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <p:ConcatString>
                                            <p:ConcatString.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </p:ConcatString.Result>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Exported by " />
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                    <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status">
                      <p1:UpdateListItem.ItemId>
                        <InArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                            <p1:GetCurrentItemId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:UpdateListItem.ItemId>
                      <p1:UpdateListItem.ListId>
                        <InArgument x:TypeArguments="s:Guid">
                          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                            <p1:GetCurrentListId />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p1:UpdateListItem.ListId>
                      <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <p:SetDynamicValueProperties>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                              <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </p:ExpressionContainerValue>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                            </scg:Dictionary>
                          </p:SetDynamicValueProperties>
                        </InArgument>
                      </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                    </p1:UpdateListItem>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If DisplayName="If Exporting">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="(wfStatus == &quot;Exporting&quot;) &amp;&amp; (wfApprove == &quot;-&quot;)">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfApprove">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:And>
                            <p:And.Left>
                              <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                <p:IsEqualString Pattern="{x:Null}" Text="Exporting">
                                  <p:IsEqualString.Input>
                                    <InArgument x:TypeArguments="x:String">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                    </InArgument>
                                  </p:IsEqualString.Input>
                                </p:IsEqualString>
                              </InArgument>
                            </p:And.Left>
                            <p:And.Right>
                              <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                <p:IsEqualString Pattern="{x:Null}" Text="-">
                                  <p:IsEqualString.Input>
                                    <InArgument x:TypeArguments="x:String">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprove" />
                                    </InArgument>
                                  </p:IsEqualString.Input>
                                </p:IsEqualString>
                              </InArgument>
                            </p:And.Right>
                          </p:And>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Seq Exporting">
                        <p1:WriteToHistory DisplayName="WriteToHistory Exporting" Message="Item Exporting" />
                        <Sequence DisplayName="Seq Format StatusHistory">
                          <If>
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:Not>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <p:IsEmptyString CheckForWhiteSpace="True">
                                        <InArgument x:TypeArguments="x:String">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </InArgument>
                                      </p:IsEmptyString>
                                    </InArgument>
                                  </p:Not>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                      </p:ConcatString>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                  <p:ExpressionContainerReference.Arguments>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InOutArgument>
                                  </p:ExpressionContainerReference.Arguments>
                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </p:ExpressionContainerReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Exporting by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <p:ConcatString>
                                            <p:ConcatString.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </p:ConcatString.Result>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <p:ConcatString.Result>
                                                  <OutArgument x:TypeArguments="x:String" />
                                                </p:ConcatString.Result>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Exporting by " />
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                    </InArgument>
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status">
                          <p1:UpdateListItem.ItemId>
                            <InArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                <p1:GetCurrentItemId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:UpdateListItem.ItemId>
                          <p1:UpdateListItem.ListId>
                            <InArgument x:TypeArguments="s:Guid">
                              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                <p1:GetCurrentListId />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:UpdateListItem.ListId>
                          <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:Object" x:Key="fmExportedAt">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Object" DisplayName="wfModified">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="s:DateTime" x:Key="wfModified">
                                          <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID22}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:Convert x:TypeArguments="s:DateTime, x:Object">
                                        <InArgument x:TypeArguments="s:DateTime">
                                          <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="wfModified" />
                                        </InArgument>
                                      </p:Convert>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                        </p1:UpdateListItem>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <If DisplayName="If Approving">
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="((wfStatus == &quot;Approved&quot;) || (wfStatus == &quot;Requested&quot;)) &amp;&amp; (wfApprove != &quot;-&quot;)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatus1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfApprove">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:And>
                                <p:And.Left>
                                  <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                    <p:Or>
                                      <p:Or.Left>
                                        <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                          <p:IsEqualString Pattern="{x:Null}" Text="Approved">
                                            <p:IsEqualString.Input>
                                              <InArgument x:TypeArguments="x:String">
                                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                              </InArgument>
                                            </p:IsEqualString.Input>
                                            <p:IsEqualString.Result>
                                              <OutArgument x:TypeArguments="x:Boolean" />
                                            </p:IsEqualString.Result>
                                          </p:IsEqualString>
                                        </InArgument>
                                      </p:Or.Left>
                                      <p:Or.Right>
                                        <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                          <p:IsEqualString Pattern="{x:Null}" Text="Requested">
                                            <p:IsEqualString.Input>
                                              <InArgument x:TypeArguments="x:String">
                                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus1" />
                                              </InArgument>
                                            </p:IsEqualString.Input>
                                            <p:IsEqualString.Result>
                                              <OutArgument x:TypeArguments="x:Boolean" />
                                            </p:IsEqualString.Result>
                                          </p:IsEqualString>
                                        </InArgument>
                                      </p:Or.Right>
                                    </p:Or>
                                  </InArgument>
                                </p:And.Left>
                                <p:And.Right>
                                  <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                    <p:Not>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <p:IsEqualString Pattern="{x:Null}" Text="-">
                                          <p:IsEqualString.Input>
                                            <InArgument x:TypeArguments="x:String">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprove" />
                                            </InArgument>
                                          </p:IsEqualString.Input>
                                          <p:IsEqualString.Result>
                                            <OutArgument x:TypeArguments="x:Boolean" />
                                          </p:IsEqualString.Result>
                                        </p:IsEqualString>
                                      </InArgument>
                                    </p:Not>
                                  </InArgument>
                                </p:And.Right>
                              </p:And>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <If DisplayName="If Approve Approved">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfApprove == &quot;Approve&quot;">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfApprove">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:IsEqualString Pattern="{x:Null}" Text="Approve">
                                    <p:IsEqualString.Input>
                                      <InArgument x:TypeArguments="x:String">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprove" />
                                      </InArgument>
                                    </p:IsEqualString.Input>
                                  </p:IsEqualString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <Sequence DisplayName="Seq Approved">
                                <p1:WriteToHistory DisplayName="WriteToHistory Approved" Message="Item Approved" />
                                <Sequence DisplayName="Seq Format StatusHistory">
                                  <If>
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:Not>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <p:IsEmptyString CheckForWhiteSpace="True">
                                                <InArgument x:TypeArguments="x:String">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                              </p:IsEmptyString>
                                            </InArgument>
                                          </p:Not>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Approved by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <p:ConcatString.Result>
                                                      <OutArgument x:TypeArguments="x:String" />
                                                    </p:ConcatString.Result>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Approved by " />
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatus">
                                        <p:ExpressionContainerReference.Arguments>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                            <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                          </InOutArgument>
                                        </p:ExpressionContainerReference.Arguments>
                                        <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                      </p:ExpressionContainerReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Approved</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status/ApprovedBy">
                                  <p1:UpdateListItem.ItemId>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                        <p1:GetCurrentItemId />
                                      </p:ExpressionContainerValue>
                                    </InArgument>
                                  </p1:UpdateListItem.ItemId>
                                  <p1:UpdateListItem.ListId>
                                    <InArgument x:TypeArguments="s:Guid">
                                      <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                        <p1:GetCurrentListId />
                                      </p:ExpressionContainerValue>
                                    </InArgument>
                                  </p1:UpdateListItem.ListId>
                                  <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <p:SetDynamicValueProperties>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                          <InArgument x:TypeArguments="x:Int32" x:Key="fmApprovedById">
                                            <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                                                  <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:Object" x:Key="fmApprovedAt">
                                            <p:ExpressionContainerValue x:TypeArguments="x:Object" DisplayName="wfModified">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="s:DateTime" x:Key="wfModified">
                                                  <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID22}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:Convert x:TypeArguments="s:DateTime, x:Object">
                                                <InArgument x:TypeArguments="s:DateTime">
                                                  <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="wfModified" />
                                                </InArgument>
                                              </p:Convert>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmStatus">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatus">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                        </scg:Dictionary>
                                      </p:SetDynamicValueProperties>
                                    </InArgument>
                                  </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                </p1:UpdateListItem>
                                <Sequence DisplayName="Seq EMail">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; is approved.&quot;">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" is approved." />
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFEMailMsg1">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg1">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFEMailMsg1" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">An entry in Feeman Application has been approved and needs to be validated.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFEMailMsg2">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg2">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID37}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFEMailMsg2" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;&lt;a href=\&quot;&quot; + wfSiteUrl + &quot;Lists/Fees/Validate.aspx\&quot;&gt;Click here to go to the Feeman Validation Page&lt;/a&gt;&quot;">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="&lt;a href=&quot;" />
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Lists/Fees/Validate.aspx&quot;&gt;Click here to go to the Feeman Validation Page&lt;/a&gt;" />
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTEMailMsg">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">The request was approved by Feeman Team.</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <If DisplayName="If Approve Invalid">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfApprove == &quot;Invalid&quot;">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfApprove">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:IsEqualString Pattern="{x:Null}" Text="Invalid">
                                        <p:IsEqualString.Input>
                                          <InArgument x:TypeArguments="x:String">
                                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprove" />
                                          </InArgument>
                                        </p:IsEqualString.Input>
                                      </p:IsEqualString>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Seq Invalid">
                                    <p1:WriteToHistory DisplayName="WriteToHistory Invalid" Message="Item Invalid" />
                                    <Sequence DisplayName="Seq Format StatusHistory">
                                      <If>
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:Not>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <p:IsEmptyString CheckForWhiteSpace="True">
                                                    <InArgument x:TypeArguments="x:String">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </InArgument>
                                                  </p:IsEmptyString>
                                                </InArgument>
                                              </p:Not>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                  <p:ExpressionContainerReference.Arguments>
                                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InOutArgument>
                                                  </p:ExpressionContainerReference.Arguments>
                                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </p:ExpressionContainerReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                                  </p:ConcatString>
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Invalid set by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <p:ConcatString>
                                                            <p:ConcatString.Result>
                                                              <OutArgument x:TypeArguments="x:String" />
                                                            </p:ConcatString.Result>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Invalid set by " />
                                                          </p:ConcatString>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                                        </InArgument>
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatus">
                                            <p:ExpressionContainerReference.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                                <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                              </InOutArgument>
                                            </p:ExpressionContainerReference.Arguments>
                                            <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                          </p:ExpressionContainerReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Invalid</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status">
                                      <p1:UpdateListItem.ItemId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                            <p1:GetCurrentItemId />
                                          </p:ExpressionContainerValue>
                                        </InArgument>
                                      </p1:UpdateListItem.ItemId>
                                      <p1:UpdateListItem.ListId>
                                        <InArgument x:TypeArguments="s:Guid">
                                          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                            <p1:GetCurrentListId />
                                          </p:ExpressionContainerValue>
                                        </InArgument>
                                      </p1:UpdateListItem.ListId>
                                      <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                        <InArgument x:TypeArguments="p:DynamicValue">
                                          <p:SetDynamicValueProperties>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                              <InArgument x:TypeArguments="x:String" x:Key="fmStatus">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatus">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                            </scg:Dictionary>
                                          </p:SetDynamicValueProperties>
                                        </InArgument>
                                      </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                    </p1:UpdateListItem>
                                    <Sequence DisplayName="Seq EMail">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; has invalid data.&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" has invalid data." />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTEMailMsg">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">The request was reviewed by Feeman Team, but it has some &lt;span style='color:red'&gt;INVALID&lt;/span&gt; data. Please correct and send request again.</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Seq Rejected">
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfArchiveStatus">
                                            <p:ExpressionContainerReference.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                                                <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                                              </InOutArgument>
                                            </p:ExpressionContainerReference.Arguments>
                                            <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                                          </p:ExpressionContainerReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Rejected</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Seq EMail">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; has been rejected.&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" has been rejected." />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTEMailMsg">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">The request was rejected by Feeman Team.</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <If DisplayName="If Requesting">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="string.IsNullOrEmpty(wfStatus) || wfStatus == &quot;Draft&quot; || wfStatus == &quot;Invalid&quot; || wfStatus == &quot;Requested&quot;">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus1">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus2">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus3">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:Or>
                                    <p:Or.Left>
                                      <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                        <p:Or>
                                          <p:Or.Left>
                                            <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                              <p:Or>
                                                <p:Or.Left>
                                                  <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="0">
                                                    <p:IsEmptyString>
                                                      <p:IsEmptyString.Result>
                                                        <OutArgument x:TypeArguments="x:Boolean" />
                                                      </p:IsEmptyString.Result>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                                      </InArgument>
                                                    </p:IsEmptyString>
                                                  </InArgument>
                                                </p:Or.Left>
                                                <p:Or.Result>
                                                  <OutArgument x:TypeArguments="x:Boolean" />
                                                </p:Or.Result>
                                                <p:Or.Right>
                                                  <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                                    <p:IsEqualString Pattern="{x:Null}" Text="Draft">
                                                      <p:IsEqualString.Input>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus1" />
                                                        </InArgument>
                                                      </p:IsEqualString.Input>
                                                      <p:IsEqualString.Result>
                                                        <OutArgument x:TypeArguments="x:Boolean" />
                                                      </p:IsEqualString.Result>
                                                    </p:IsEqualString>
                                                  </InArgument>
                                                </p:Or.Right>
                                              </p:Or>
                                            </InArgument>
                                          </p:Or.Left>
                                          <p:Or.Right>
                                            <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                              <p:IsEqualString Pattern="{x:Null}" Text="Invalid">
                                                <p:IsEqualString.Input>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus2" />
                                                  </InArgument>
                                                </p:IsEqualString.Input>
                                                <p:IsEqualString.Result>
                                                  <OutArgument x:TypeArguments="x:Boolean" />
                                                </p:IsEqualString.Result>
                                              </p:IsEqualString>
                                            </InArgument>
                                          </p:Or.Right>
                                        </p:Or>
                                      </InArgument>
                                    </p:Or.Left>
                                    <p:Or.Right>
                                      <InArgument x:TypeArguments="x:Boolean" EvaluationOrder="1">
                                        <p:IsEqualString Pattern="{x:Null}" Text="Requested">
                                          <p:IsEqualString.Input>
                                            <InArgument x:TypeArguments="x:String">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus3" />
                                            </InArgument>
                                          </p:IsEqualString.Input>
                                        </p:IsEqualString>
                                      </InArgument>
                                    </p:Or.Right>
                                  </p:Or>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </If.Condition>
                            <If.Then>
                              <If DisplayName="If Request Requested">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfRequest == &quot;Request&quot;">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfRequest">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID13}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:IsEqualString Pattern="{x:Null}" Text="Request">
                                        <p:IsEqualString.Input>
                                          <InArgument x:TypeArguments="x:String">
                                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfRequest" />
                                          </InArgument>
                                        </p:IsEqualString.Input>
                                      </p:IsEqualString>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <Sequence DisplayName="Seq Requested">
                                    <p1:WriteToHistory DisplayName="WriteToHistory Requested" Message="Item Requested" />
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatus">
                                            <p:ExpressionContainerReference.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                                <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                              </InOutArgument>
                                            </p:ExpressionContainerReference.Arguments>
                                            <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                          </p:ExpressionContainerReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Requested</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Sequence DisplayName="Seq Format StatusHistory">
                                      <If>
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:Not>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <p:IsEmptyString CheckForWhiteSpace="True">
                                                    <InArgument x:TypeArguments="x:String">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </InArgument>
                                                  </p:IsEmptyString>
                                                </InArgument>
                                              </p:Not>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                  <p:ExpressionContainerReference.Arguments>
                                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InOutArgument>
                                                  </p:ExpressionContainerReference.Arguments>
                                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </p:ExpressionContainerReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                                  </p:ConcatString>
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Requested by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <p:ConcatString>
                                                            <p:ConcatString.Result>
                                                              <OutArgument x:TypeArguments="x:String" />
                                                            </p:ConcatString.Result>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Requested by " />
                                                          </p:ConcatString>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                                        </InArgument>
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                    <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status/RequestedBy">
                                      <p1:UpdateListItem.ItemId>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                            <p1:GetCurrentItemId />
                                          </p:ExpressionContainerValue>
                                        </InArgument>
                                      </p1:UpdateListItem.ItemId>
                                      <p1:UpdateListItem.ListId>
                                        <InArgument x:TypeArguments="s:Guid">
                                          <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                            <p1:GetCurrentListId />
                                          </p:ExpressionContainerValue>
                                        </InArgument>
                                      </p1:UpdateListItem.ListId>
                                      <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                        <InArgument x:TypeArguments="p:DynamicValue">
                                          <p:SetDynamicValueProperties>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                              <InArgument x:TypeArguments="x:Int32" x:Key="fmRequestedById">
                                                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                                                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmStatus">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatus">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                            </scg:Dictionary>
                                          </p:SetDynamicValueProperties>
                                        </InArgument>
                                      </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                    </p1:UpdateListItem>
                                    <Sequence DisplayName="Seq EMail">
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailSubject">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;an entry &quot; + wfId + &quot; has been requested.&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="an entry " />
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" has been requested." />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFEMailMsg1">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg1">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFEMailMsg1" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">we have an entry in Feeman Application for you to react on.</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFEMailMsg2">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg2">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID37}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFEMailMsg2" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;&lt;a href=\&quot;&quot; + wfSiteUrl + &quot;Lists/Fees/Approve.aspx\&quot;&gt;Click here to go to the Feeman Approval Page&lt;/a&gt;&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="&lt;a href=&quot;" />
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Lists/Fees/Approve.aspx&quot;&gt;Click here to go to the Feeman Approval Page&lt;/a&gt;" />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <If DisplayName="If Request Draft">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfRequest == &quot;Draft&quot;">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfRequest">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID13}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:IsEqualString Pattern="{x:Null}" Text="Draft">
                                            <p:IsEqualString.Input>
                                              <InArgument x:TypeArguments="x:String">
                                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfRequest" />
                                              </InArgument>
                                            </p:IsEqualString.Input>
                                          </p:IsEqualString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Sequence DisplayName="Seq Draft">
                                        <p1:WriteToHistory DisplayName="WriteToHistory Draft" Message="Process Draft" />
                                        <Sequence DisplayName="Seq Format StatusHistory">
                                          <If>
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <p:Not>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <p:IsEmptyString CheckForWhiteSpace="True">
                                                        <InArgument x:TypeArguments="x:String">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                        </InArgument>
                                                      </p:IsEmptyString>
                                                    </InArgument>
                                                  </p:Not>
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                            </If.Condition>
                                            <If.Then>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                      <p:ExpressionContainerReference.Arguments>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                        </InOutArgument>
                                                      </p:ExpressionContainerReference.Arguments>
                                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </p:ExpressionContainerReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                                      <p:ExpressionContainerValue.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                        </InArgument>
                                                      </p:ExpressionContainerValue.Arguments>
                                                      <p:ConcatString>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                                      </p:ConcatString>
                                                    </p:ExpressionContainerValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                          </If>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                  <p:ExpressionContainerReference.Arguments>
                                                    <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InOutArgument>
                                                  </p:ExpressionContainerReference.Arguments>
                                                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </p:ExpressionContainerReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Draft set by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                                  <p:ExpressionContainerValue.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                                    </InArgument>
                                                  </p:ExpressionContainerValue.Arguments>
                                                  <p:ConcatString>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <p:ConcatString>
                                                            <p:ConcatString.Result>
                                                              <OutArgument x:TypeArguments="x:String" />
                                                            </p:ConcatString.Result>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                              <p:ConcatString>
                                                                <p:ConcatString.Result>
                                                                  <OutArgument x:TypeArguments="x:String" />
                                                                </p:ConcatString.Result>
                                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                                </InArgument>
                                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Draft set by " />
                                                              </p:ConcatString>
                                                            </InArgument>
                                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                                            </InArgument>
                                                          </p:ConcatString>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </p:ExpressionContainerValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update Status">
                                          <p1:UpdateListItem.ItemId>
                                            <InArgument x:TypeArguments="x:Int32">
                                              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                                <p1:GetCurrentItemId />
                                              </p:ExpressionContainerValue>
                                            </InArgument>
                                          </p1:UpdateListItem.ItemId>
                                          <p1:UpdateListItem.ListId>
                                            <InArgument x:TypeArguments="s:Guid">
                                              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                                <p1:GetCurrentListId />
                                              </p:ExpressionContainerValue>
                                            </InArgument>
                                          </p1:UpdateListItem.ListId>
                                          <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                            <InArgument x:TypeArguments="p:DynamicValue">
                                              <p:SetDynamicValueProperties>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                                  <InArgument x:TypeArguments="x:String" x:Key="fmStatus">Draft</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                                      <p:ExpressionContainerValue.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                        </InArgument>
                                                      </p:ExpressionContainerValue.Arguments>
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                    </p:ExpressionContainerValue>
                                                  </InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                                </scg:Dictionary>
                                              </p:SetDynamicValueProperties>
                                            </InArgument>
                                          </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                        </p1:UpdateListItem>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfArchiveStatus">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Cancelled</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </If.Else>
                              </If>
                            </If.Then>
                            <If.Else>
                              <Sequence DisplayName="Seq Edited">
                                <p1:WriteToHistory DisplayName="WriteToHistory Edited" Message="Item Edited" />
                                <Sequence DisplayName="Seq Format StatusHistory">
                                  <If>
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:Not>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <p:IsEmptyString CheckForWhiteSpace="True">
                                                <InArgument x:TypeArguments="x:String">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                              </p:IsEmptyString>
                                            </InArgument>
                                          </p:Not>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerReference.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InOutArgument>
                                              </p:ExpressionContainerReference.Arguments>
                                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                                              </p:ConcatString>
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;Edited by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <p:ConcatString.Result>
                                                      <OutArgument x:TypeArguments="x:String" />
                                                    </p:ConcatString.Result>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Edited by " />
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                                    </InArgument>
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Update StatusHistory">
                                  <p1:UpdateListItem.ItemId>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                                        <p1:GetCurrentItemId />
                                      </p:ExpressionContainerValue>
                                    </InArgument>
                                  </p1:UpdateListItem.ItemId>
                                  <p1:UpdateListItem.ListId>
                                    <InArgument x:TypeArguments="s:Guid">
                                      <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                                        <p1:GetCurrentListId />
                                      </p:ExpressionContainerValue>
                                    </InArgument>
                                  </p1:UpdateListItem.ListId>
                                  <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                    <InArgument x:TypeArguments="p:DynamicValue">
                                      <p:SetDynamicValueProperties>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                          <InArgument x:TypeArguments="x:String" x:Key="fmStatusHistory">
                                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                                              <p:ExpressionContainerValue.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                                </InArgument>
                                              </p:ExpressionContainerValue.Arguments>
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </p:ExpressionContainerValue>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmRequest">-</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmApprove">-</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="fmValidate">-</InArgument>
                                        </scg:Dictionary>
                                      </p:SetDynamicValueProperties>
                                    </InArgument>
                                  </p1:UpdateListItem.ListItemPropertiesDynamicValue>
                                </p1:UpdateListItem>
                              </Sequence>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </If.Else>
          </If>
          <If DisplayName="If Move to Archive">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfArchiveStatus != &quot;&quot;">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:Not>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:IsEqualString Pattern="{x:Null}">
                        <p:IsEqualString.Input>
                          <InArgument x:TypeArguments="x:String">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                          </InArgument>
                        </p:IsEqualString.Input>
                        <p:IsEqualString.Text>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="">
                              <Literal.Result>
                                <OutArgument x:TypeArguments="x:String" />
                              </Literal.Result>
                            </Literal>
                          </InArgument>
                        </p:IsEqualString.Text>
                      </p:IsEqualString>
                    </InArgument>
                  </p:Not>
                </p:ExpressionContainerValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Seq WriteToArchive">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID38" Default="Test" Name="wfFolderName" />
                  <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID39" Default="0" Name="wfFolderId" />
                </Sequence.Variables>
                <Assign>
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFolderName">
                        <p:ExpressionContainerReference.Arguments>
                          <InOutArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                            <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                          </InOutArgument>
                        </p:ExpressionContainerReference.Arguments>
                        <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                      </p:ExpressionContainerReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfExportedAt.ToString(&quot;yyyy-MM&quot;)">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="wfExportedAt">
                            <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID25}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:ToString Format="yyyy-MM">
                          <InArgument x:TypeArguments="x:Object">
                            <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfExportedAt" />
                          </InArgument>
                        </p:ToString>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <If>
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfFolderName == &quot;0001-01&quot;">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:IsEqualString Pattern="{x:Null}" Text="0001-01">
                          <p:IsEqualString.Input>
                            <InArgument x:TypeArguments="x:String">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                            </InArgument>
                          </p:IsEqualString.Input>
                        </p:IsEqualString>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFolderName">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfApprovedAt.ToString(&quot;yyyy-MM&quot;)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:Object" x:Key="wfApprovedAt">
                                  <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID18}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ToString Format="yyyy-MM">
                                <InArgument x:TypeArguments="x:Object">
                                  <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfApprovedAt" />
                                </InArgument>
                              </p:ToString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfFolderName == &quot;0001-01&quot;">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:IsEqualString Pattern="{x:Null}" Text="0001-01">
                                <p:IsEqualString.Input>
                                  <InArgument x:TypeArguments="x:String">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                                  </InArgument>
                                </p:IsEqualString.Input>
                              </p:IsEqualString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFolderName">
                                    <p:ExpressionContainerReference.Arguments>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                        <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                      </InOutArgument>
                                    </p:ExpressionContainerReference.Arguments>
                                    <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                                  </p:ExpressionContainerReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfCreated.ToString(&quot;yyyy-MM&quot;)">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:Object" x:Key="wfCreated">
                                        <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID23}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ToString Format="yyyy-MM">
                                      <InArgument x:TypeArguments="x:Object">
                                        <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfCreated" />
                                      </InArgument>
                                    </p:ToString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <If>
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfFolderName == &quot;0001-01&quot;">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:IsEqualString Pattern="{x:Null}" Text="0001-01">
                                      <p:IsEqualString.Input>
                                        <InArgument x:TypeArguments="x:String">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                                        </InArgument>
                                      </p:IsEqualString.Input>
                                    </p:IsEqualString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfFolderName">
                                          <p:ExpressionContainerReference.Arguments>
                                            <InOutArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                            </InOutArgument>
                                          </p:ExpressionContainerReference.Arguments>
                                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                                        </p:ExpressionContainerReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfModified.ToString(&quot;yyyy-MM&quot;)">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:Object" x:Key="wfModified">
                                              <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID22}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ToString Format="yyyy-MM">
                                            <InArgument x:TypeArguments="x:Object">
                                              <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfModified" />
                                            </InArgument>
                                          </p:ToString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <p1:LookupSPListItemId>
                  <p1:LookupSPListItemId.ListId>
                    <InArgument x:TypeArguments="s:Guid">
                      <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/Archive;}&quot;)">
                        <p:ParseGuid Value="{}{$ListId:Lists/Archive;}" />
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:LookupSPListItemId.ListId>
                  <p1:LookupSPListItemId.PropertyName>
                    <InArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Title&quot;" Expression="Title" />
                    </InArgument>
                  </p1:LookupSPListItemId.PropertyName>
                  <p1:LookupSPListItemId.PropertyValue>
                    <InArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfFolderName">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:LookupSPListItemId.PropertyValue>
                  <p1:LookupSPListItemId.Result>
                    <OutArgument x:TypeArguments="x:Int32">
                      <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="wfFolderId">
                        <p:ExpressionContainerReference.Arguments>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="wfFolderId">
                            <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID39}" />
                          </InOutArgument>
                        </p:ExpressionContainerReference.Arguments>
                        <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="wfFolderId" />
                      </p:ExpressionContainerReference>
                    </OutArgument>
                  </p1:LookupSPListItemId.Result>
                </p1:LookupSPListItemId>
                <p1:WriteToHistory>
                  <p1:WriteToHistory.Message>
                    <InArgument x:TypeArguments="x:String">
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Archive Folder Name='&quot; + wfFolderName + &quot;' Id='&quot; + wfFolderId + &quot;'&quot;">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="wfFolderId">
                            <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID39}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:ConcatString>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                            <p:ConcatString>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                <p:ConcatString>
                                  <p:ConcatString.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </p:ConcatString.Result>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <p:ConcatString>
                                      <p:ConcatString.Result>
                                        <OutArgument x:TypeArguments="x:String" />
                                      </p:ConcatString.Result>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Archive Folder Name='" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="' Id='" />
                                </p:ConcatString>
                              </InArgument>
                              <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                <p:Convert x:TypeArguments="x:Int32, x:String">
                                  <p:Convert.Result>
                                    <OutArgument x:TypeArguments="x:String" />
                                  </p:Convert.Result>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfFolderId" />
                                  </InArgument>
                                </p:Convert>
                              </InArgument>
                            </p:ConcatString>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="'" />
                        </p:ConcatString>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:WriteToHistory.Message>
                </p1:WriteToHistory>
                <Sequence DisplayName="Seq Format StatusHistory">
                  <If>
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrWhiteSpace(wfStatusHistory)">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:Not>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:IsEmptyString CheckForWhiteSpace="True">
                                <InArgument x:TypeArguments="x:String">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </InArgument>
                              </p:IsEmptyString>
                            </InArgument>
                          </p:Not>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + &quot;\n&quot;">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&#xA;" />
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory + wfArchiveStatus + &quot; by &quot; + wfUserTitle + &quot; at &quot; + wfModifiedTime">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfUserTitle">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfModifiedTime">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:ConcatString>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <p:ConcatString.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </p:ConcatString.Result>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <p:ConcatString>
                                            <p:ConcatString.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </p:ConcatString.Result>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" by " />
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserTitle" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" at " />
                              </p:ConcatString>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfModifiedTime" />
                            </InArgument>
                          </p:ConcatString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <If DisplayName="If Folder not exists">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfFolderId == 0">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:Int32" x:Key="wfFolderId">
                            <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID39}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:IsEqual x:TypeArguments="x:Int32">
                          <p:IsEqual.Left>
                            <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                              <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfFolderId" />
                            </InArgument>
                          </p:IsEqual.Left>
                          <p:IsEqual.Right>
                            <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="0" />
                          </p:IsEqual.Right>
                        </p:IsEqual>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Seq CreateFolderOut">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID45" Name="wfContentTypeId" />
                        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID50" Name="wfItemID" />
                      </Sequence.Variables>
                      <Sequence DisplayName="Seq REST Find Content Type">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID42" Name="wfResponseCode" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID41" Name="wfResponseBody" />
                          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID40" Name="wfURL" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID43" Name="wfResultList" />
                          <Variable x:TypeArguments="x:String" Name="wf" />
                        </Sequence.Variables>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID40}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_api/web/lists/getbytitle('Archive')/contenttypes?$select=Id/StringValue&amp;$filter=Name eq 'Folder'&quot;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_api/web/lists/getbytitle('Archive')/contenttypes?$select=Id/StringValue&amp;$filter=Name eq 'Folder'" />
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Find Folder Content Type URL=&quot; + wfURL">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID40}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Find Folder Content Type URL=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:HttpSend Method="GET">
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseContent>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID41}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseContent>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponseCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID42}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID40}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Find Content Type ResponseCode=&quot; + wfResponseCode">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                        <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID42}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Find Content Type ResponseCode=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                          <InArgument x:TypeArguments="sn:HttpStatusCode">
                                            <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                                          </InArgument>
                                        </p:Convert>
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                          <p:GetODataProperties.Source>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID41}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetODataProperties.Source>
                          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                            <OutArgument x:TypeArguments="p:DynamicValue" x:Key="d/results">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResultList">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResultList">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID43}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResultList" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </scg:Dictionary>
                        </p:GetODataProperties>
                        <ForEach x:TypeArguments="p:DynamicValue" DisplayName="ForEach&lt;DynamicValue&gt;">
                          <ForEach.Values>
                            <InArgument x:TypeArguments="scg:IEnumerable(p:DynamicValue)">
                              <p:ExpressionContainerValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" DisplayName="wfResultList">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(p:DynamicValue)" x:Key="wfResultList">
                                    <VariableValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" Variable="{x:Reference __ReferenceID43}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" ArgumentName="wfResultList" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </ForEach.Values>
                          <ActivityAction x:TypeArguments="p:DynamicValue">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID44" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence>
                              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                                <p:GetODataProperties.Source>
                                  <InArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="item">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="item">
                                          <DelegateArgumentValue x:TypeArguments="p:DynamicValue">
                                            <x:Reference>__ReferenceID44</x:Reference>
                                          </DelegateArgumentValue>
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="item" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p:GetODataProperties.Source>
                                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                  <OutArgument x:TypeArguments="x:String" x:Key="Id/StringValue">
                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfContentTypeId">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfContentTypeId">
                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfContentTypeId" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </scg:Dictionary>
                              </p:GetODataProperties>
                              <If DisplayName="If TraceToHistory">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                          <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <p1:WriteToHistory>
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Retrieved Folder ContentTypeId=&quot; + wfContentTypeId">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfContentTypeId">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Retrieved Folder ContentTypeId=" />
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfContentTypeId" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;ContentTypeId=&quot; + wfContentTypeId">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfContentTypeId">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="ContentTypeId=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfContentTypeId" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Seq REST Create Folder">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID46" Name="wfRequestPayload" />
                          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID47" Name="wfURL" />
                          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID49" Name="wfResponseCode" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID48" Name="wfResponseBody" />
                        </Sequence.Variables>
                        <p:BuildDynamicValue>
                          <p:BuildDynamicValue.Result>
                            <InOutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID46}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                              </p:ExpressionContainerReference>
                            </InOutArgument>
                          </p:BuildDynamicValue.Result>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="FileLeafRef">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfFolderName">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="__metadata/type">SP.Data.ArchiveListItem</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ContentTypeId">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfContentTypeId">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfContentTypeId">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfContentTypeId" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FileSystemObjectType">1</InArgument>
                          </scg:Dictionary>
                        </p:BuildDynamicValue>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID47}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_api/web/lists/getbytitle('Archive')/items&quot;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_api/web/lists/getbytitle('Archive')/items" />
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Create Folder URL=&quot; + wfURL">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID47}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Create Folder URL=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:HttpSend Method="POST">
                          <p:HttpSend.RequestContent>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID46}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.RequestContent>
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseContent>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID48}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseContent>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponseCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID49}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID47}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Create Folder ResponseCode=&quot; + wfResponseCode">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                        <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID49}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Create Folder ResponseCode=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                          <InArgument x:TypeArguments="sn:HttpStatusCode">
                                            <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                                          </InArgument>
                                        </p:Convert>
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                          <p:GetODataProperties.Source>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID48}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetODataProperties.Source>
                          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                            <OutArgument x:TypeArguments="x:String" x:Key="d/Id">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfItemID">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfItemID">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID50}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfItemID" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </scg:Dictionary>
                        </p:GetODataProperties>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Create Folder ItemID=&quot; + wfItemID">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfItemID">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID50}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Create Folder ItemID=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfItemID" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Seq REST Rename Folder">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID51" Name="wfURL" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID52" Name="wfRequestPayload" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID53" Name="wfResponceBody" />
                          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID54" Name="wfResponceCode" />
                        </Sequence.Variables>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID51}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_api/web/lists/getbytitle('Archive')/items(&quot; + wfItemID + &quot;)&quot;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfItemID">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID50}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                        <p:ConcatString>
                                          <p:ConcatString.Result>
                                            <OutArgument x:TypeArguments="x:String" />
                                          </p:ConcatString.Result>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_api/web/lists/getbytitle('Archive')/items(" />
                                        </p:ConcatString>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfItemID" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=")" />
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <p:BuildDynamicValue>
                          <p:BuildDynamicValue.Result>
                            <InOutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID52}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                              </p:ExpressionContainerReference>
                            </InOutArgument>
                          </p:BuildDynamicValue.Result>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="Title">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfFolderName">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FileLeafRef">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfFolderName">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="__metadata/type">SP.Data.ArchiveListItem</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="fmAccount">-----------------------</InArgument>
                          </scg:Dictionary>
                        </p:BuildDynamicValue>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Rename Folder URL=&quot; + wfURL">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID51}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Rename Folder URL=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:HttpSend Method="POST">
                          <p:HttpSend.RequestContent>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID52}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.RequestContent>
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="X-HTTP-Method">MERGE</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="If-Match">*</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseContent>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponceBody">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponceBody">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID53}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponceBody" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseContent>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponceCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponceCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID54}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponceCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID51}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Rename Folder ResponseCode=&quot; + wfResponceCode">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponceCode">
                                        <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID54}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Rename Folder ResponseCode=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                          <InArgument x:TypeArguments="sn:HttpStatusCode">
                                            <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponceCode" />
                                          </InArgument>
                                        </p:Convert>
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                      </Sequence>
                    </Sequence>
                  </If.Then>
                </If>
                <Sequence DisplayName="Seq CreateItemArchive">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID58" Name="wfRequestPayload" />
                    <Variable x:TypeArguments="x:String" x:Name="__ReferenceID59" Name="wfURL" />
                    <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID61" Name="wfResponseCode" />
                    <Variable x:TypeArguments="x:String" x:Name="__ReferenceID55" Name="wfPath" />
                    <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID60" Name="wfResponseContent" />
                    <Variable x:TypeArguments="x:String" x:Name="__ReferenceID56" Name="wfApprovedAtString">
                      <Variable.Default>
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="null">
                          <p:NullLiteral x:TypeArguments="x:String" />
                        </p:ExpressionContainerValue>
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" x:Name="__ReferenceID57" Name="wfExportedAtString">
                      <Variable.Default>
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="null">
                          <p:NullLiteral x:TypeArguments="x:String" />
                        </p:ExpressionContainerValue>
                      </Variable.Default>
                    </Variable>
                  </Sequence.Variables>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfPath">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfPath">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID55}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfPath" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl.Substring(wfSiteUrl.IndexOf(&quot;/&quot;, 8)) + &quot;Lists/Archive/&quot; + wfFolderName">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl1">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfFolderName">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:ConcatString>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:Substring Length="{x:Null}">
                                    <p:Substring.Input>
                                      <InArgument x:TypeArguments="x:String">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl1" />
                                      </InArgument>
                                    </p:Substring.Input>
                                    <p:Substring.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </p:Substring.Result>
                                    <p:Substring.StartIndex>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <p:IndexOfString SearchValue="/" StartIndex="8" Count="{x:Null}">
                                          <p:IndexOfString.Input>
                                            <InArgument x:TypeArguments="x:String">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                            </InArgument>
                                          </p:IndexOfString.Input>
                                          <p:IndexOfString.Result>
                                            <OutArgument x:TypeArguments="x:Int32" />
                                          </p:IndexOfString.Result>
                                        </p:IndexOfString>
                                      </InArgument>
                                    </p:Substring.StartIndex>
                                  </p:Substring>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Lists/Archive/" />
                              </p:ConcatString>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFolderName" />
                            </InArgument>
                          </p:ConcatString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If>
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfApprovedAt.Year &gt; 1">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="wfApprovedAt">
                              <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID18}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:IsGreaterThan x:TypeArguments="x:Int32">
                            <p:IsGreaterThan.Left>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                <p:GetDateField DateField="Year">
                                  <p:GetDateField.Input>
                                    <InArgument x:TypeArguments="s:DateTime">
                                      <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="wfApprovedAt" />
                                    </InArgument>
                                  </p:GetDateField.Input>
                                </p:GetDateField>
                              </InArgument>
                            </p:IsGreaterThan.Left>
                            <p:IsGreaterThan.Right>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="1" />
                            </p:IsGreaterThan.Right>
                          </p:IsGreaterThan>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfApprovedAtString">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfApprovedAtString">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID56}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfApprovedAtString" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfApprovedAt.ToString(&quot;yyyy-MM-ddTHH:mm:ssZ&quot;)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:Object" x:Key="wfApprovedAt">
                                  <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID18}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ToString Format="yyyy-MM-ddTHH:mm:ssZ">
                                <InArgument x:TypeArguments="x:Object">
                                  <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfApprovedAt" />
                                </InArgument>
                              </p:ToString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <If>
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfExportedAt.Year &gt; 1">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="wfExportedAt">
                              <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID25}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:IsGreaterThan x:TypeArguments="x:Int32">
                            <p:IsGreaterThan.Left>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                <p:GetDateField DateField="Year">
                                  <p:GetDateField.Input>
                                    <InArgument x:TypeArguments="s:DateTime">
                                      <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="wfExportedAt" />
                                    </InArgument>
                                  </p:GetDateField.Input>
                                </p:GetDateField>
                              </InArgument>
                            </p:IsGreaterThan.Left>
                            <p:IsGreaterThan.Right>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="1" />
                            </p:IsGreaterThan.Right>
                          </p:IsGreaterThan>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfExportedAtString">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfExportedAtString">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID57}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfExportedAtString" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfExportedAt.ToString(&quot;yyyy-MM-ddTHH:mm:ssZ&quot;)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:Object" x:Key="wfExportedAt">
                                  <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID25}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ToString Format="yyyy-MM-ddTHH:mm:ssZ">
                                <InArgument x:TypeArguments="x:Object">
                                  <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfExportedAt" />
                                </InArgument>
                              </p:ToString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <p:BuildDynamicValue>
                    <p:BuildDynamicValue.Result>
                      <InOutArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                              <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                        </p:ExpressionContainerReference>
                      </InOutArgument>
                    </p:BuildDynamicValue.Result>
                    <scg:Dictionary x:TypeArguments="x:String, InArgument">
                      <InArgument x:TypeArguments="x:Int32" x:Key="TeamId">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfTeamId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfTeamId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfTeamId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="CustomerAccountNumber">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfCustomerAccount">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfCustomerAccount">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID4}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfCustomerAccount" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ClientName">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfClientName">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfClientName">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID5}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfClientName" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Double" x:Key="TransactionAmount">
                        <p:ExpressionContainerValue x:TypeArguments="x:Double" DisplayName="wfTransactionAmount">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Double" x:Key="wfTransactionAmount">
                              <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID6}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfTransactionAmount" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="CurrencyId">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfCurrencyId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfCurrencyId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfCurrencyId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Double" x:Key="Units">
                        <p:ExpressionContainerValue x:TypeArguments="x:Double" DisplayName="wfUnits">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                              <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="PLVDescriptionId">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfPLVDescriptionId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfPLVDescriptionId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID10}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfPLVDescriptionId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Double" x:Key="Amount">
                        <p:ExpressionContainerValue x:TypeArguments="x:Double" DisplayName="wfAmount">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Double" x:Key="wfAmount">
                              <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID11}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfAmount" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Comments">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfComments">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfComments">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfComments" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="StatusValue">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfArchiveStatus">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="StatusHistory">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfStatusHistory">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="RequestedById">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfRequestedById">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfRequestedById">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID16}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfRequestedById" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="ApprovedById">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfApprovedById">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfApprovedById">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID17}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfApprovedById" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Int32" x:Key="ValidatedById">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfValidatedById">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfValidatedById">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID32}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfValidatedById" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="s:DateTime" x:Key="CreatedAt">
                        <p:ExpressionContainerValue x:TypeArguments="s:DateTime" DisplayName="wfCreated">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="wfCreated">
                              <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID23}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="wfCreated" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ApprovedAt">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfApprovedAtString">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfApprovedAtString">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID56}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfApprovedAtString" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Path">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfPath">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfPath">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID55}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfPath" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="ItemID">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfId">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:Object" x:Key="ExportedAt">
                        <p:ExpressionContainerValue x:TypeArguments="x:Object" DisplayName="wfExportedAtString">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Object" x:Key="wfExportedAtString">
                              <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID57}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Object" ArgumentName="wfExportedAtString" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </scg:Dictionary>
                  </p:BuildDynamicValue>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID59}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_vti_bin/listdata.svc/Archive&quot;">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:ConcatString>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_vti_bin/listdata.svc/Archive" />
                          </p:ConcatString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If DisplayName="If TraceToHistory">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                              <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <p1:WriteToHistory>
                        <p1:WriteToHistory.Message>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Create Archive Item URL=&quot; + wfURL + &quot; Path=&quot; + wfPath">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID59}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfPath">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID55}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Create Archive Item URL=" />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" Path=" />
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfPath" />
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </p1:WriteToHistory.Message>
                      </p1:WriteToHistory>
                    </If.Then>
                  </If>
                  <p:HttpSend Method="POST">
                    <p:HttpSend.RequestContent>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfRequestPayload">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfRequestPayload">
                              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfRequestPayload" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:HttpSend.RequestContent>
                    <p:HttpSend.RequestHeaders>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:SetDynamicValueProperties>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument">
                            <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                          </scg:Dictionary>
                        </p:SetDynamicValueProperties>
                      </InArgument>
                    </p:HttpSend.RequestHeaders>
                    <p:HttpSend.ResponseContent>
                      <OutArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponseContent">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseContent">
                              <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID60}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseContent" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </p:HttpSend.ResponseContent>
                    <p:HttpSend.ResponseStatusCode>
                      <OutArgument x:TypeArguments="sn:HttpStatusCode">
                        <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponseCode">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                              <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID61}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </p:HttpSend.ResponseStatusCode>
                    <p:HttpSend.Uri>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID59}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:HttpSend.Uri>
                  </p:HttpSend>
                  <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                    <p:GetODataProperties.Source>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfResponseContent">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseContent">
                              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID60}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseContent" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:GetODataProperties.Source>
                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                      <OutArgument x:TypeArguments="x:String" x:Key="d/Id">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfIdArchive">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfIdArchive">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID62}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfIdArchive" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </scg:Dictionary>
                  </p:GetODataProperties>
                  <If DisplayName="If TraceToHistory">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                              <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <p1:WriteToHistory>
                        <p1:WriteToHistory.Message>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Create Archive Item ResponseCode=&quot; + wfResponseCode">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                  <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID61}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Create Archive Item ResponseCode=" />
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                    <InArgument x:TypeArguments="sn:HttpStatusCode">
                                      <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                                    </InArgument>
                                  </p:Convert>
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </p1:WriteToHistory.Message>
                      </p1:WriteToHistory>
                    </If.Then>
                  </If>
                </Sequence>
                <p1:DeleteListItem ItemGuid="{x:Null}" DisplayName="DeleteListItem After archieved">
                  <p1:DeleteListItem.ItemId>
                    <InArgument x:TypeArguments="x:Int32">
                      <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                        <p1:GetCurrentItemId />
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:DeleteListItem.ItemId>
                  <p1:DeleteListItem.ListId>
                    <InArgument x:TypeArguments="s:Guid">
                      <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                        <p1:GetCurrentListId />
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </p1:DeleteListItem.ListId>
                </p1:DeleteListItem>
              </Sequence>
            </If.Then>
          </If>
          <If DisplayName="If Send EMail">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrEmpty(wfEMailSubject)">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:Not>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:IsEmptyString>
                        <InArgument x:TypeArguments="x:String">
                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                        </InArgument>
                      </p:IsEmptyString>
                    </InArgument>
                  </p:Not>
                </p:ExpressionContainerValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <Sequence DisplayName="Seq EMail">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID80" Name="wfBOL">
                    <Variable.Default>
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;&lt;p style='font-family:\&quot;Segoe UI\&quot;,\&quot;sans-serif\&quot;'&gt;&quot;" Expression="&lt;p style='font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;'&gt;" />
                    </Variable.Default>
                  </Variable>
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID68" Default="&lt;/p&gt;" Name="wfEOL" />
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID67" Name="wfBOLs">
                    <Variable.Default>
                      <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;&lt;p style='font-size:10.0pt;font-family:\&quot;Segoe UI\&quot;,\&quot;sans-serif\&quot;'&gt;&quot;" Expression="&lt;p style='font-size:10.0pt;font-family:&quot;Segoe UI&quot;,&quot;sans-serif&quot;'&gt;" />
                    </Variable.Default>
                  </Variable>
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID64" Name="wfTeamName" />
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID65" Name="wfPLVDescriptionName" />
                  <Variable x:TypeArguments="x:String" x:Name="__ReferenceID66" Name="wfEMailItem" />
                </Sequence.Variables>
                <Sequence DisplayName="Seq Lookup Lists">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID63" Name="wfDyn" />
                  </Sequence.Variables>
                  <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="LookupSPListItem Team">
                    <p1:LookupSPListItem.ItemId>
                      <InArgument x:TypeArguments="x:Int32">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfTeamId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfTeamId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfTeamId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:LookupSPListItem.ItemId>
                    <p1:LookupSPListItem.ListId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/Teams;}&quot;)">
                          <p:ParseGuid Value="{}{$ListId:Lists/Teams;}" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:LookupSPListItem.ListId>
                    <p1:LookupSPListItem.Result>
                      <OutArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfDyn">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfDyn">
                              <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID63}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfDyn" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </p1:LookupSPListItem.Result>
                  </p1:LookupSPListItem>
                  <p:GetODataProperties DisplayName="GetDynamicValueProperties Team">
                    <p:GetODataProperties.Source>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfDyn">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfDyn">
                              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID63}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfDyn" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:GetODataProperties.Source>
                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                      <OutArgument x:TypeArguments="x:String" x:Key="Name">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfTeamName">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfTeamName">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID64}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfTeamName" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </scg:Dictionary>
                  </p:GetODataProperties>
                  <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="LookupSPListItem PriceList">
                    <p1:LookupSPListItem.ItemId>
                      <InArgument x:TypeArguments="x:Int32">
                        <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfPLVDescriptionId">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="wfPLVDescriptionId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID10}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfPLVDescriptionId" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:LookupSPListItem.ItemId>
                    <p1:LookupSPListItem.ListId>
                      <InArgument x:TypeArguments="s:Guid">
                        <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/PriceList;}&quot;)">
                          <p:ParseGuid Value="{}{$ListId:Lists/PriceList;}" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:LookupSPListItem.ListId>
                    <p1:LookupSPListItem.Result>
                      <OutArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfDyn">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfDyn">
                              <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID63}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfDyn" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </p1:LookupSPListItem.Result>
                  </p1:LookupSPListItem>
                  <p:GetODataProperties DisplayName="GetDynamicValueProperties PriceList">
                    <p:GetODataProperties.Source>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfDyn">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfDyn">
                              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID63}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfDyn" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:GetODataProperties.Source>
                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                      <OutArgument x:TypeArguments="x:String" x:Key="fmPLVDescription">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfPLVDescriptionName">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfPLVDescriptionName">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID65}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfPLVDescriptionName" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </scg:Dictionary>
                  </p:GetODataProperties>
                </Sequence>
                <Sequence DisplayName="Seq Item">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailItem">
                          <p:ExpressionContainerReference.Arguments>
                            <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                              <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                            </InOutArgument>
                          </p:ExpressionContainerReference.Arguments>
                          <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                        </p:ExpressionContainerReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Concat(wfBOLs, &quot;Team: &quot;, wfTeamName, wfEOL, wfBOLs, &quot;PLV Description: &quot;, wfPLVDescriptionName, wfEOL, wfBOLs, &quot;Customer Account Number: &quot;, wfCustomerAccount, wfEOL, wfBOLs, &quot;Client Name: &quot;, wfClientName, wfEOL,&#xA;wfBOLs, &quot;Units: &quot;, &quot;&quot; + wfUnits, wfEOL, wfBOLs, &quot;Amount: &quot;, &quot;&quot; + wfAmount, wfEOL, wfBOLs, &quot;Comments: &quot;, wfComments, wfEOL)">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfTeamName">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID64}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs1">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfPLVDescriptionName">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID65}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL1">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs2">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfCustomerAccount">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID4}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL2">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs3">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfClientName">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID5}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL3">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs4">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Double" x:Key="wfUnits">
                              <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID8}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL4">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs5">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Double" x:Key="wfAmount">
                              <VariableValue x:TypeArguments="x:Double" Variable="{x:Reference __ReferenceID11}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL5">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfBOLs6">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfComments">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="wfEOL6">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:ConcatString>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Team: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfTeamName" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="5">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs1" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="6" Expression="PLV Description: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="7">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfPLVDescriptionName" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="8">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL1" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="9">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs2" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="10" Expression="Customer Account Number: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="11">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfCustomerAccount" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="12">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL2" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="13">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs3" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="14" Expression="Client Name: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="15">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfClientName" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="16">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL3" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="17">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs4" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="18" Expression="Units: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="19">
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <Literal x:TypeArguments="x:String" Value="">
                                    <Literal.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </Literal.Result>
                                  </Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:Convert x:TypeArguments="x:Double, x:String">
                                    <p:Convert.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </p:Convert.Result>
                                    <InArgument x:TypeArguments="x:Double">
                                      <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfUnits" />
                                    </InArgument>
                                  </p:Convert>
                                </InArgument>
                              </p:ConcatString>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="20">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL4" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="21">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs5" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="22" Expression="Amount: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="23">
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <Literal x:TypeArguments="x:String" Value="">
                                    <Literal.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </Literal.Result>
                                  </Literal>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:Convert x:TypeArguments="x:Double, x:String">
                                    <p:Convert.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </p:Convert.Result>
                                    <InArgument x:TypeArguments="x:Double">
                                      <ArgumentValue x:TypeArguments="x:Double" ArgumentName="wfAmount" />
                                    </InArgument>
                                  </p:Convert>
                                </InArgument>
                              </p:ConcatString>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="24">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL5" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="25">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs6" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="26" Expression="Comments: " />
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="27">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfComments" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" EvaluationOrder="28">
                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL6" />
                            </InArgument>
                          </p:ConcatString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If>
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrEmpty(wfArchiveStatus)">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:Not>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:IsEmptyString>
                                <InArgument x:TypeArguments="x:String">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                                </InArgument>
                              </p:IsEmptyString>
                            </InArgument>
                          </p:Not>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailItem">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfEMailItem +&#xA;string.Concat(wfBOLs, &quot;ID: &lt;a href=\&quot;&quot;, wfSiteUrl, &quot;Lists/Archive/DispForm.aspx?ID=&quot; + wfIdArchive, &quot;\&quot;&gt;&quot;, &quot;&quot; + wfIdArchive, &quot;&lt;/a&gt;&quot;, wfEOL, wfBOLs, &quot;Status: &quot;, wfArchiveStatus, wfEOL)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOLs">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfIdArchive">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID62}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfIdArchive1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID62}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOLs1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfArchiveStatus">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="ID: &lt;a href=&quot;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Lists/Archive/DispForm.aspx?ID=" />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfIdArchive" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="5" Expression="&quot;&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="6">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <Literal x:TypeArguments="x:String" Value="">
                                            <Literal.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </Literal.Result>
                                          </Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfIdArchive1" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="7" Expression="&lt;/a&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="8">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="9">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs1" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="10" Expression="Status: " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="11">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfArchiveStatus" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="12">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL1" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEMailItem">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfEMailItem + &#xA;string.Concat(wfBOLs, &quot;ID: &lt;a href=\&quot;&quot;, wfSiteUrl, &quot;Lists/Fees/DispForm.aspx?ID=&quot; + wfId, &quot;\&quot;&gt;&quot;, &quot;&quot; + wfId, &quot;&lt;/a&gt;&quot;, wfEOL, wfBOLs, &quot;Status: &quot;, wfStatus, wfEOL)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOLs">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfId">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfId1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOLs1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatus">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID12}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="ID: &lt;a href=&quot;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Lists/Fees/DispForm.aspx?ID=" />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="5" Expression="&quot;&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="6">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <Literal x:TypeArguments="x:String" Value="">
                                            <Literal.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </Literal.Result>
                                          </Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfId1" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="7" Expression="&lt;/a&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="8">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="9">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs1" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="10" Expression="Status: " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="11">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatus" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="12">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL1" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </Sequence>
                <If DisplayName="If Send EMail Feeman">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrEmpty(wfFEMailMsg1)">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg1">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:Not>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:IsEmptyString>
                              <InArgument x:TypeArguments="x:String">
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFEMailMsg1" />
                              </InArgument>
                            </p:IsEmptyString>
                          </InArgument>
                        </p:Not>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Seq EMail Feeman">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sco:Collection(x:String)" x:Name="__ReferenceID75" Name="wfEmailList">
                          <Variable.Default>
                            <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:String)" DisplayName="new Collection&lt;string&gt;()">
                              <p:BuildCollection x:TypeArguments="x:String" />
                            </p:ExpressionContainerValue>
                          </Variable.Default>
                        </Variable>
                        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID79" Name="wfEmailBody" />
                      </Sequence.Variables>
                      <Sequence DisplayName="Seq REST Read Feeman Users">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="p:DynamicValue" Name="wfRequestPayload" />
                          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID69" Name="wfURL" />
                          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID71" Name="wfResponseCode" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID70" Name="wfResponseBody" />
                          <Variable x:TypeArguments="x:String" Name="wfItemID" />
                          <Variable x:TypeArguments="sco:Collection(x:Int32)" x:Name="__ReferenceID74" Name="wfMembersIDs">
                            <Variable.Default>
                              <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:Int32)" DisplayName="new Collection&lt;int&gt;()">
                                <p:BuildCollection x:TypeArguments="x:Int32" />
                              </p:ExpressionContainerValue>
                            </Variable.Default>
                          </Variable>
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID72" Name="wfResultList" />
                        </Sequence.Variables>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID69}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_api/web/lists/GetByTitle('Config')/items&quot;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_api/web/lists/GetByTitle('Config')/items" />
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;URL=&quot; + wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID69}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="URL=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                        <p:HttpSend Method="GET">
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseContent>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID70}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseContent>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponseCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID71}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID69}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;ResponseCode=&quot; + wfResponseCode">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID71}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="ResponseCode=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                      <InArgument x:TypeArguments="sn:HttpStatusCode">
                                        <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                          <p:GetODataProperties.Source>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID70}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetODataProperties.Source>
                          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                            <OutArgument x:TypeArguments="p:DynamicValue" x:Key="d/results">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResultList">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResultList">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID72}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResultList" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </scg:Dictionary>
                        </p:GetODataProperties>
                        <ForEach x:TypeArguments="p:DynamicValue" DisplayName="ForEach&lt;DynamicValue&gt;">
                          <ForEach.Values>
                            <InArgument x:TypeArguments="scg:IEnumerable(p:DynamicValue)">
                              <p:ExpressionContainerValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" DisplayName="wfResultList">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(p:DynamicValue)" x:Key="wfResultList">
                                    <VariableValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" Variable="{x:Reference __ReferenceID72}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="scg:IEnumerable(p:DynamicValue)" ArgumentName="wfResultList" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </ForEach.Values>
                          <ActivityAction x:TypeArguments="p:DynamicValue">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID73" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence>
                              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                                <p:GetODataProperties.Source>
                                  <InArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="item">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="item">
                                          <DelegateArgumentValue x:TypeArguments="p:DynamicValue">
                                            <x:Reference>__ReferenceID73</x:Reference>
                                          </DelegateArgumentValue>
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="item" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p:GetODataProperties.Source>
                                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                  <OutArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="fmMembersId/results">
                                    <p:ExpressionContainerReference x:TypeArguments="sco:Collection(x:Int32)" DisplayName="wfMembersIDs">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="wfMembersIDs">
                                          <VariableReference x:TypeArguments="sco:Collection(x:Int32)" Variable="{x:Reference __ReferenceID74}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="sco:Collection(x:Int32)" ArgumentName="wfMembersIDs" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </scg:Dictionary>
                              </p:GetODataProperties>
                              <p1:WriteToHistory>
                                <p1:WriteToHistory.Message>
                                  <InArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Retrieved FeemanMembersIDs &quot; + wfMembersIDs.Count + &quot; items&quot;">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="wfMembersIDs">
                                          <VariableValue x:TypeArguments="sco:Collection(x:Int32)" Variable="{x:Reference __ReferenceID74}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <p:ConcatString>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Retrieved FeemanMembersIDs " />
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <p:Convert x:TypeArguments="x:Int32, x:String">
                                                <p:Convert.Result>
                                                  <OutArgument x:TypeArguments="x:String" />
                                                </p:Convert.Result>
                                                <InArgument x:TypeArguments="x:Int32">
                                                  <p:CountCollection x:TypeArguments="x:Int32">
                                                    <p:CountCollection.Collection>
                                                      <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
                                                        <p:Convert x:TypeArguments="sco:Collection(x:Int32), scg:ICollection(x:Int32)">
                                                          <p:Convert.Result>
                                                            <OutArgument x:TypeArguments="scg:ICollection(x:Int32)" />
                                                          </p:Convert.Result>
                                                          <InArgument x:TypeArguments="sco:Collection(x:Int32)">
                                                            <ArgumentValue x:TypeArguments="sco:Collection(x:Int32)" ArgumentName="wfMembersIDs" />
                                                          </InArgument>
                                                        </p:Convert>
                                                      </InArgument>
                                                    </p:CountCollection.Collection>
                                                    <p:CountCollection.Result>
                                                      <OutArgument x:TypeArguments="x:Int32" />
                                                    </p:CountCollection.Result>
                                                  </p:CountCollection>
                                                </InArgument>
                                              </p:Convert>
                                            </InArgument>
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=" items" />
                                      </p:ConcatString>
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p1:WriteToHistory.Message>
                              </p1:WriteToHistory>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                        <RemoveFromCollection x:TypeArguments="x:Int32">
                          <RemoveFromCollection.Item>
                            <InArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfModifiedById">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="wfModifiedById">
                                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID21}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfModifiedById" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </RemoveFromCollection.Item>
                          <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
                            <p:ExpressionContainerValue x:TypeArguments="scg:ICollection(x:Int32)" DisplayName="wfMembersIDs">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="scg:ICollection(x:Int32)" x:Key="wfMembersIDs">
                                  <VariableValue x:TypeArguments="scg:ICollection(x:Int32)" Variable="{x:Reference __ReferenceID74}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <ArgumentValue x:TypeArguments="scg:ICollection(x:Int32)" ArgumentName="wfMembersIDs" />
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </RemoveFromCollection>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;FeemanMembersCount=&quot; + wfMembersIDs.Count">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="wfMembersIDs">
                                    <VariableValue x:TypeArguments="sco:Collection(x:Int32)" Variable="{x:Reference __ReferenceID74}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="FeemanMembersCount=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <p:Convert x:TypeArguments="x:Int32, x:String">
                                      <InArgument x:TypeArguments="x:Int32">
                                        <p:CountCollection x:TypeArguments="x:Int32">
                                          <p:CountCollection.Collection>
                                            <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
                                              <p:Convert x:TypeArguments="sco:Collection(x:Int32), scg:ICollection(x:Int32)">
                                                <p:Convert.Result>
                                                  <OutArgument x:TypeArguments="scg:ICollection(x:Int32)" />
                                                </p:Convert.Result>
                                                <InArgument x:TypeArguments="sco:Collection(x:Int32)">
                                                  <ArgumentValue x:TypeArguments="sco:Collection(x:Int32)" ArgumentName="wfMembersIDs" />
                                                </InArgument>
                                              </p:Convert>
                                            </InArgument>
                                          </p:CountCollection.Collection>
                                          <p:CountCollection.Result>
                                            <OutArgument x:TypeArguments="x:Int32" />
                                          </p:CountCollection.Result>
                                        </p:CountCollection>
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                        <p:BuildCollection x:TypeArguments="x:String">
                          <p:BuildCollection.Result>
                            <OutArgument x:TypeArguments="sco:Collection(x:String)">
                              <p:ExpressionContainerReference x:TypeArguments="sco:Collection(x:String)" DisplayName="wfEmailList">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                    <VariableReference x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID75}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:BuildCollection.Result>
                        </p:BuildCollection>
                        <ForEach x:TypeArguments="x:Int32">
                          <ForEach.Values>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                              <p:ExpressionContainerValue x:TypeArguments="scg:IEnumerable(x:Int32)" DisplayName="wfMembersIDs">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)" x:Key="wfMembersIDs">
                                    <VariableValue x:TypeArguments="scg:IEnumerable(x:Int32)" Variable="{x:Reference __ReferenceID74}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="scg:IEnumerable(x:Int32)" ArgumentName="wfMembersIDs" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </ForEach.Values>
                          <ActivityAction x:TypeArguments="x:Int32">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Int32" x:Name="__ReferenceID76" Name="wfMemberID" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Seq Lookup Member">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID77" Name="wfUser" />
                                <Variable x:TypeArguments="x:String" x:Name="__ReferenceID78" Name="wfUserLoginName" />
                              </Sequence.Variables>
                              <p1:LookupSPUser>
                                <p1:LookupSPUser.PrincipalId>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfMemberID">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="wfMemberID">
                                          <DelegateArgumentValue x:TypeArguments="x:Int32">
                                            <x:Reference>__ReferenceID76</x:Reference>
                                          </DelegateArgumentValue>
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfMemberID" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p1:LookupSPUser.PrincipalId>
                                <p1:LookupSPUser.Result>
                                  <OutArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                                          <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID77}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </p1:LookupSPUser.Result>
                              </p1:LookupSPUser>
                              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                                <p:GetODataProperties.Source>
                                  <InArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                                          <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID77}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p:GetODataProperties.Source>
                                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                  <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfUserLoginName">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID78}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </scg:Dictionary>
                              </p:GetODataProperties>
                              <If DisplayName="If TraceToHistory">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                          <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <p1:WriteToHistory>
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Member ID='&quot; + wfMemberID + &quot;' LoginName='&quot; + wfUserLoginName +&quot;'&quot;">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="wfMemberID">
                                              <DelegateArgumentValue x:TypeArguments="x:Int32">
                                                <x:Reference>__ReferenceID76</x:Reference>
                                              </DelegateArgumentValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID78}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <p:ConcatString.Result>
                                                      <OutArgument x:TypeArguments="x:String" />
                                                    </p:ConcatString.Result>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Member ID='" />
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                          <p:Convert x:TypeArguments="x:Int32, x:String">
                                                            <p:Convert.Result>
                                                              <OutArgument x:TypeArguments="x:String" />
                                                            </p:Convert.Result>
                                                            <InArgument x:TypeArguments="x:Int32">
                                                              <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfMemberID" />
                                                            </InArgument>
                                                          </p:Convert>
                                                        </InArgument>
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="' LoginName='" />
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="'" />
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                </If.Then>
                              </If>
                              <AddToCollection x:TypeArguments="x:String" DisplayName="AddToCollection&lt;String&gt;">
                                <AddToCollection.Item>
                                  <InArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfUserLoginName">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID78}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </AddToCollection.Item>
                                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                  <p:ExpressionContainerValue x:TypeArguments="scg:ICollection(x:String)" DisplayName="wfEmailList">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="scg:ICollection(x:String)" x:Key="wfEmailList">
                                        <VariableValue x:TypeArguments="scg:ICollection(x:String)" Variable="{x:Reference __ReferenceID75}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <ArgumentValue x:TypeArguments="scg:ICollection(x:String)" ArgumentName="wfEmailList" />
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </AddToCollection>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                      </Sequence>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEmailBody">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEmailBody">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID79}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEmailBody" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Concat(wfBOL, &quot;Hi Billing Admin Team,&quot;, wfEOL, wfBOL, &quot;Feeman Application: &quot; + wfFEMailMsg1, wfEOL, wfBOL, wfFEMailMsg2, &quot;&lt;br&gt;to further process this entry.&quot;, wfEOL, wfBOL, &quot;Details about the entry are:&quot;, wfEOL) +&#xA;wfEMailItem +&#xA;string.Concat(wfBOLs, &quot;History: &quot;, wfStatusHistory, wfEOL, wfBOL, &quot;&lt;a href=\&quot;&quot;, wfSiteUrl, &quot;\&quot;&gt;The start page of Feeman Application&lt;/a&gt;&quot;, wfEOL)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL2">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfFEMailMsg2">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID37}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL2">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL3">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL3">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOLs">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID67}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfStatusHistory">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID19}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL4">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL4">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL5">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="Hi Billing Admin Team," />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL1" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="5">
                                          <p:ConcatString>
                                            <p:ConcatString.Result>
                                              <OutArgument x:TypeArguments="x:String" />
                                            </p:ConcatString.Result>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Feeman Application: " />
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                              <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFEMailMsg1" />
                                            </InArgument>
                                          </p:ConcatString>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="6">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL1" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="7">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL2" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="8">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfFEMailMsg2" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="9" Expression="&lt;br&gt;to further process this entry." />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="10">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL2" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="11">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL3" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="12" Expression="Details about the entry are:" />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="13">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL3" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOLs" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="History: " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfStatusHistory" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL4" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="5">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL4" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="6" Expression="&lt;a href=&quot;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="7">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="8" Expression="&quot;&gt;The start page of Feeman Application&lt;/a&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="9">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL5" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfEmailList.Count &gt; 0">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                  <VariableValue x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID75}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:IsGreaterThan x:TypeArguments="x:Int32">
                                <p:IsGreaterThan.Left>
                                  <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                    <p:CountCollection x:TypeArguments="x:String">
                                      <p:CountCollection.Collection>
                                        <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                          <p:Convert x:TypeArguments="sco:Collection(x:String), scg:ICollection(x:String)">
                                            <p:Convert.Result>
                                              <OutArgument x:TypeArguments="scg:ICollection(x:String)" />
                                            </p:Convert.Result>
                                            <InArgument x:TypeArguments="sco:Collection(x:String)">
                                              <ArgumentValue x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                                            </InArgument>
                                          </p:Convert>
                                        </InArgument>
                                      </p:CountCollection.Collection>
                                    </p:CountCollection>
                                  </InArgument>
                                </p:IsGreaterThan.Left>
                                <p:IsGreaterThan.Right>
                                  <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="0" />
                                </p:IsGreaterThan.Right>
                              </p:IsGreaterThan>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}">
                            <p1:Email.Body>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfEmailBody">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfEmailBody">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID79}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEmailBody" />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.Body>
                            <p1:Email.Subject>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;FeeMan Application: &quot; + wfEMailSubject">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="FeeMan Application: " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                    </InArgument>
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.Subject>
                            <p1:Email.To>
                              <InArgument x:TypeArguments="sco:Collection(x:String)">
                                <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:String)" DisplayName="wfEmailList">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                      <VariableValue x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID75}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <ArgumentValue x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.To>
                          </p1:Email>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <If DisplayName="If Send EMail Team">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="!string.IsNullOrEmpty(wfTEMailMsg)">
                        <p:ExpressionContainerValue.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                            <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                          </InArgument>
                        </p:ExpressionContainerValue.Arguments>
                        <p:Not>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:IsEmptyString>
                              <InArgument x:TypeArguments="x:String">
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                              </InArgument>
                            </p:IsEmptyString>
                          </InArgument>
                        </p:Not>
                      </p:ExpressionContainerValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence DisplayName="Seq EMail Team">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sco:Collection(x:String)" x:Name="__ReferenceID85" Name="wfEmailList">
                          <Variable.Default>
                            <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:String)" DisplayName="new Collection&lt;string&gt;()">
                              <p:BuildCollection x:TypeArguments="x:String" />
                            </p:ExpressionContainerValue>
                          </Variable.Default>
                        </Variable>
                        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID89" Name="wfEmailBody" />
                      </Sequence.Variables>
                      <Sequence DisplayName="Seq REST Read Users">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="p:DynamicValue" Name="wfRequestPayload" />
                          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID81" Name="wfURL" />
                          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID83" Name="wfResponseCode" />
                          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID82" Name="wfResponseBody" />
                          <Variable x:TypeArguments="x:String" Name="wfItemID" />
                          <Variable x:TypeArguments="sco:Collection(x:Int32)" x:Name="__ReferenceID84" Name="wfMembersIDs">
                            <Variable.Default>
                              <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:Int32)" DisplayName="new Collection&lt;int&gt;()">
                                <p:BuildCollection x:TypeArguments="x:Int32" />
                              </p:ExpressionContainerValue>
                            </Variable.Default>
                          </Variable>
                        </Sequence.Variables>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID81}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfSiteUrl + &quot;_api/web/lists/GetByTitle('Teams')/items(&quot; + wfTeamId + &quot;)&quot;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="wfTeamId">
                                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                        <p:ConcatString>
                                          <p:ConcatString.Result>
                                            <OutArgument x:TypeArguments="x:String" />
                                          </p:ConcatString.Result>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="_api/web/lists/GetByTitle('Teams')/items(" />
                                        </p:ConcatString>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <p:Convert x:TypeArguments="x:Int32, x:String">
                                          <p:Convert.Result>
                                            <OutArgument x:TypeArguments="x:String" />
                                          </p:Convert.Result>
                                          <InArgument x:TypeArguments="x:Int32">
                                            <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfTeamId" />
                                          </InArgument>
                                        </p:Convert>
                                      </InArgument>
                                    </p:ConcatString>
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression=")" />
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <If DisplayName="If TraceToHistory">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                    <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Lookup Team URL=&quot; + wfURL">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                        <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID81}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:ConcatString>
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Lookup Team URL=" />
                                      <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                        <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                                      </InArgument>
                                    </p:ConcatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <p:HttpSend Method="GET">
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseContent>
                            <OutArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID82}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseContent>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="wfResponseCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID83}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfURL">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="wfURL">
                                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID81}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfURL" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Lookup Team ResponseCode=&quot; + wfResponseCode">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="wfResponseCode">
                                    <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID83}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Lookup Team ResponseCode=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <p:Convert x:TypeArguments="sn:HttpStatusCode, x:String">
                                      <InArgument x:TypeArguments="sn:HttpStatusCode">
                                        <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="wfResponseCode" />
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                        <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                          <p:GetODataProperties.Source>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfResponseBody">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfResponseBody">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID82}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfResponseBody" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetODataProperties.Source>
                          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                            <OutArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="d/fmMembersId/results">
                              <p:ExpressionContainerReference x:TypeArguments="sco:Collection(x:Int32)" DisplayName="wfMembersIDs">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="wfMembersIDs">
                                    <VariableReference x:TypeArguments="sco:Collection(x:Int32)" Variable="{x:Reference __ReferenceID84}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sco:Collection(x:Int32)" ArgumentName="wfMembersIDs" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </scg:Dictionary>
                        </p:GetODataProperties>
                        <p1:WriteToHistory>
                          <p1:WriteToHistory.Message>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Team MembersCount=&quot; + wfMembersIDs.Count">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="sco:Collection(x:Int32)" x:Key="wfMembersIDs">
                                    <VariableValue x:TypeArguments="sco:Collection(x:Int32)" Variable="{x:Reference __ReferenceID84}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:ConcatString>
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Team MembersCount=" />
                                  <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                    <p:Convert x:TypeArguments="x:Int32, x:String">
                                      <InArgument x:TypeArguments="x:Int32">
                                        <p:CountCollection x:TypeArguments="x:Int32">
                                          <p:CountCollection.Collection>
                                            <InArgument x:TypeArguments="scg:ICollection(x:Int32)">
                                              <p:Convert x:TypeArguments="sco:Collection(x:Int32), scg:ICollection(x:Int32)">
                                                <p:Convert.Result>
                                                  <OutArgument x:TypeArguments="scg:ICollection(x:Int32)" />
                                                </p:Convert.Result>
                                                <InArgument x:TypeArguments="sco:Collection(x:Int32)">
                                                  <ArgumentValue x:TypeArguments="sco:Collection(x:Int32)" ArgumentName="wfMembersIDs" />
                                                </InArgument>
                                              </p:Convert>
                                            </InArgument>
                                          </p:CountCollection.Collection>
                                          <p:CountCollection.Result>
                                            <OutArgument x:TypeArguments="x:Int32" />
                                          </p:CountCollection.Result>
                                        </p:CountCollection>
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:ConcatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p1:WriteToHistory.Message>
                        </p1:WriteToHistory>
                        <p:BuildCollection x:TypeArguments="x:String">
                          <p:BuildCollection.Result>
                            <OutArgument x:TypeArguments="sco:Collection(x:String)">
                              <p:ExpressionContainerReference x:TypeArguments="sco:Collection(x:String)" DisplayName="wfEmailList">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                    <VariableReference x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID85}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:BuildCollection.Result>
                        </p:BuildCollection>
                        <ForEach x:TypeArguments="x:Int32">
                          <ForEach.Values>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)">
                              <p:ExpressionContainerValue x:TypeArguments="scg:IEnumerable(x:Int32)" DisplayName="wfMembersIDs">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="scg:IEnumerable(x:Int32)" x:Key="wfMembersIDs">
                                    <VariableValue x:TypeArguments="scg:IEnumerable(x:Int32)" Variable="{x:Reference __ReferenceID84}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="scg:IEnumerable(x:Int32)" ArgumentName="wfMembersIDs" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </ForEach.Values>
                          <ActivityAction x:TypeArguments="x:Int32">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Int32" x:Name="__ReferenceID86" Name="wfMemberID" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Seq Lookup Member">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID87" Name="wfUser" />
                                <Variable x:TypeArguments="x:String" x:Name="__ReferenceID88" Name="wfUserLoginName" />
                              </Sequence.Variables>
                              <p1:LookupSPUser>
                                <p1:LookupSPUser.PrincipalId>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="wfMemberID">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:Int32" x:Key="wfMemberID">
                                          <DelegateArgumentValue x:TypeArguments="x:Int32">
                                            <x:Reference>__ReferenceID86</x:Reference>
                                          </DelegateArgumentValue>
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfMemberID" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p1:LookupSPUser.PrincipalId>
                                <p1:LookupSPUser.Result>
                                  <OutArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                                          <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID87}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </p1:LookupSPUser.Result>
                              </p1:LookupSPUser>
                              <p:GetODataProperties DisplayName="GetDynamicValueProperties">
                                <p:GetODataProperties.Source>
                                  <InArgument x:TypeArguments="p:DynamicValue">
                                    <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="wfUser">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="p:DynamicValue" x:Key="wfUser">
                                          <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID87}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="wfUser" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </p:GetODataProperties.Source>
                                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                                  <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfUserLoginName">
                                      <p:ExpressionContainerReference.Arguments>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID88}" />
                                        </InOutArgument>
                                      </p:ExpressionContainerReference.Arguments>
                                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                    </p:ExpressionContainerReference>
                                  </OutArgument>
                                </scg:Dictionary>
                              </p:GetODataProperties>
                              <If DisplayName="If TraceToHistory">
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfTraceDebug">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="wfTraceDebug">
                                          <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID1}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="wfTraceDebug" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <p1:WriteToHistory>
                                    <p1:WriteToHistory.Message>
                                      <InArgument x:TypeArguments="x:String">
                                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Member ID='&quot; + wfMemberID + &quot;' LoginName='&quot; + wfUserLoginName +&quot;'&quot;">
                                          <p:ExpressionContainerValue.Arguments>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="wfMemberID">
                                              <DelegateArgumentValue x:TypeArguments="x:Int32">
                                                <x:Reference>__ReferenceID86</x:Reference>
                                              </DelegateArgumentValue>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                              <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID88}" />
                                            </InArgument>
                                          </p:ExpressionContainerValue.Arguments>
                                          <p:ConcatString>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                              <p:ConcatString>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                  <p:ConcatString>
                                                    <p:ConcatString.Result>
                                                      <OutArgument x:TypeArguments="x:String" />
                                                    </p:ConcatString.Result>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                                      <p:ConcatString>
                                                        <p:ConcatString.Result>
                                                          <OutArgument x:TypeArguments="x:String" />
                                                        </p:ConcatString.Result>
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="Member ID='" />
                                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                          <p:Convert x:TypeArguments="x:Int32, x:String">
                                                            <p:Convert.Result>
                                                              <OutArgument x:TypeArguments="x:String" />
                                                            </p:Convert.Result>
                                                            <InArgument x:TypeArguments="x:Int32">
                                                              <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="wfMemberID" />
                                                            </InArgument>
                                                          </p:Convert>
                                                        </InArgument>
                                                      </p:ConcatString>
                                                    </InArgument>
                                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="' LoginName='" />
                                                  </p:ConcatString>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                                </InArgument>
                                              </p:ConcatString>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="'" />
                                          </p:ConcatString>
                                        </p:ExpressionContainerValue>
                                      </InArgument>
                                    </p1:WriteToHistory.Message>
                                  </p1:WriteToHistory>
                                </If.Then>
                              </If>
                              <AddToCollection x:TypeArguments="x:String" DisplayName="AddToCollection&lt;String&gt;">
                                <AddToCollection.Item>
                                  <InArgument x:TypeArguments="x:String">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfUserLoginName">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="wfUserLoginName">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID88}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfUserLoginName" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </AddToCollection.Item>
                                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                  <p:ExpressionContainerValue x:TypeArguments="scg:ICollection(x:String)" DisplayName="wfEmailList">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="scg:ICollection(x:String)" x:Key="wfEmailList">
                                        <VariableValue x:TypeArguments="scg:ICollection(x:String)" Variable="{x:Reference __ReferenceID85}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <ArgumentValue x:TypeArguments="scg:ICollection(x:String)" ArgumentName="wfEmailList" />
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </AddToCollection>
                            </Sequence>
                          </ActivityAction>
                        </ForEach>
                      </Sequence>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfEmailBody">
                              <p:ExpressionContainerReference.Arguments>
                                <InOutArgument x:TypeArguments="x:String" x:Key="wfEmailBody">
                                  <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID89}" />
                                </InOutArgument>
                              </p:ExpressionContainerReference.Arguments>
                              <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfEmailBody" />
                            </p:ExpressionContainerReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Concat(wfBOL, wfTEMailMsg, wfEOL, wfBOL, &quot;Details about the entry are:&quot;, wfEOL) +&#xA;wfEMailItem +&#xA;string.Concat(wfBOL, &quot;&lt;a href=\&quot;&quot;, wfSiteUrl, &quot;\&quot;&gt;The start page of Feeman Application&lt;/a&gt;&quot;, wfEOL)">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfTEMailMsg">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL1">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEMailItem">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID66}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfBOL2">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID80}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfSiteUrl">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="wfEOL2">
                                  <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID68}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:ConcatString>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <p:ConcatString>
                                        <p:ConcatString.Result>
                                          <OutArgument x:TypeArguments="x:String" />
                                        </p:ConcatString.Result>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfTEMailMsg" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="4">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL1" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="5" Expression="Details about the entry are:" />
                                        <InArgument x:TypeArguments="x:String" EvaluationOrder="6">
                                          <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL1" />
                                        </InArgument>
                                      </p:ConcatString>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailItem" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                                <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfBOL2" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2" Expression="&lt;a href=&quot;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="3">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfSiteUrl" />
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="4" Expression="&quot;&gt;The start page of Feeman Application&lt;/a&gt;" />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="5">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEOL2" />
                                    </InArgument>
                                  </p:ConcatString>
                                </InArgument>
                              </p:ConcatString>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfEmailList.Count &gt; 0">
                              <p:ExpressionContainerValue.Arguments>
                                <InArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                  <VariableValue x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID85}" />
                                </InArgument>
                              </p:ExpressionContainerValue.Arguments>
                              <p:IsGreaterThan x:TypeArguments="x:Int32">
                                <p:IsGreaterThan.Left>
                                  <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                    <p:CountCollection x:TypeArguments="x:String">
                                      <p:CountCollection.Collection>
                                        <InArgument x:TypeArguments="scg:ICollection(x:String)">
                                          <p:Convert x:TypeArguments="sco:Collection(x:String), scg:ICollection(x:String)">
                                            <p:Convert.Result>
                                              <OutArgument x:TypeArguments="scg:ICollection(x:String)" />
                                            </p:Convert.Result>
                                            <InArgument x:TypeArguments="sco:Collection(x:String)">
                                              <ArgumentValue x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                                            </InArgument>
                                          </p:Convert>
                                        </InArgument>
                                      </p:CountCollection.Collection>
                                    </p:CountCollection>
                                  </InArgument>
                                </p:IsGreaterThan.Left>
                                <p:IsGreaterThan.Right>
                                  <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="0" />
                                </p:IsGreaterThan.Right>
                              </p:IsGreaterThan>
                            </p:ExpressionContainerValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}">
                            <p1:Email.Body>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfEmailBody">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfEmailBody">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID89}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEmailBody" />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.Body>
                            <p1:Email.Subject>
                              <InArgument x:TypeArguments="x:String">
                                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;FeeMan Application: &quot; + wfEMailSubject">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="wfEMailSubject">
                                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <p:ConcatString>
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="FeeMan Application: " />
                                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfEMailSubject" />
                                    </InArgument>
                                  </p:ConcatString>
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.Subject>
                            <p1:Email.To>
                              <InArgument x:TypeArguments="sco:Collection(x:String)">
                                <p:ExpressionContainerValue x:TypeArguments="sco:Collection(x:String)" DisplayName="wfEmailList">
                                  <p:ExpressionContainerValue.Arguments>
                                    <InArgument x:TypeArguments="sco:Collection(x:String)" x:Key="wfEmailList">
                                      <VariableValue x:TypeArguments="sco:Collection(x:String)" Variable="{x:Reference __ReferenceID85}" />
                                    </InArgument>
                                  </p:ExpressionContainerValue.Arguments>
                                  <ArgumentValue x:TypeArguments="sco:Collection(x:String)" ArgumentName="wfEmailList" />
                                </p:ExpressionContainerValue>
                              </InArgument>
                            </p1:Email.To>
                          </p1:Email>
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Seq Catch">
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="wfWorkflowActive">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                          <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Error</InArgument>
                </Assign.Value>
              </Assign>
              <Rethrow />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence>
          <p1:WriteToHistory>
            <p1:WriteToHistory.Message>
              <InArgument x:TypeArguments="x:String">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;wfWorkflowActive=&quot; + wfWorkflowActive">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:ConcatString>
                    <InArgument x:TypeArguments="x:String" EvaluationOrder="1" Expression="wfWorkflowActive=" />
                    <InArgument x:TypeArguments="x:String" EvaluationOrder="2">
                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                    </InArgument>
                  </p:ConcatString>
                </p:ExpressionContainerValue>
              </InArgument>
            </p1:WriteToHistory.Message>
          </p1:WriteToHistory>
          <If>
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="wfWorkflowActive != &quot;Active&quot;">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:Not>
                    <InArgument x:TypeArguments="x:Boolean">
                      <p:IsEqualString Pattern="{x:Null}" Text="Active">
                        <p:IsEqualString.Input>
                          <InArgument x:TypeArguments="x:String">
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                          </InArgument>
                        </p:IsEqualString.Input>
                      </p:IsEqualString>
                    </InArgument>
                  </p:Not>
                </p:ExpressionContainerValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <p1:UpdateListItem ItemGuid="{x:Null}" ListItemProperties="{x:Null}" DisplayName="Set Workflow Active">
                <p1:UpdateListItem.ItemId>
                  <InArgument x:TypeArguments="x:Int32">
                    <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                      <p1:GetCurrentItemId />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:UpdateListItem.ItemId>
                <p1:UpdateListItem.ListId>
                  <InArgument x:TypeArguments="s:Guid">
                    <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                      <p1:GetCurrentListId />
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p1:UpdateListItem.ListId>
                <p1:UpdateListItem.ListItemPropertiesDynamicValue>
                  <InArgument x:TypeArguments="p:DynamicValue">
                    <p:SetDynamicValueProperties>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument">
                        <InArgument x:TypeArguments="x:String" x:Key="fmWorkflowActive">
                          <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="wfWorkflowActive">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="wfWorkflowActive">
                                <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="wfWorkflowActive" />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </scg:Dictionary>
                    </p:SetDynamicValueProperties>
                  </InArgument>
                </p1:UpdateListItem.ListItemPropertiesDynamicValue>
              </p1:UpdateListItem>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>